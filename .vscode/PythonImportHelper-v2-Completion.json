[
    {
        "label": "pysd",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pysd",
        "description": "pysd",
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "Component",
        "importPath": "pysd",
        "description": "pysd",
        "isExtraImport": true,
        "detail": "pysd",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "xarray",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "xarray",
        "description": "xarray",
        "detail": "xarray",
        "documentation": {}
    },
    {
        "label": "xidz",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "not_implemented_function",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "if_then_else",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "sum",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "integer",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "if_then_else",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "integer",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "if_then_else",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "step",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "ramp",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "step",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "ramp",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "step",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "ramp",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "ramp",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "step",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "if_then_else",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "step",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "ramp",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "if_then_else",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "step",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "ramp",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "pulse",
        "importPath": "pysd.py_backend.functions",
        "description": "pysd.py_backend.functions",
        "isExtraImport": true,
        "detail": "pysd.py_backend.functions",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Initial",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Smooth",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Integ",
        "importPath": "pysd.py_backend.statefuls",
        "description": "pysd.py_backend.statefuls",
        "isExtraImport": true,
        "detail": "pysd.py_backend.statefuls",
        "documentation": {}
    },
    {
        "label": "Macro",
        "importPath": "pysd.py_backend.model",
        "description": "pysd.py_backend.model",
        "isExtraImport": true,
        "detail": "pysd.py_backend.model",
        "documentation": {}
    },
    {
        "label": "print_function",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "BadZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "ZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "add_random_poisson_to_pysd",
        "kind": 2,
        "importPath": "2025.fix_pysd_poisson",
        "description": "2025.fix_pysd_poisson",
        "peekOfCode": "def add_random_poisson_to_pysd():\n    \"\"\"Add random_poisson function to PySD's functionspace\"\"\"\n    # Import the functionspace\n    from pysd.builders.python.python_expressions_builder import functionspace\n    # Define the random_poisson function following PySD's pattern\n    # Vensim RANDOM POISSON(min, max, mean, shift, stretch, seed)\n    # PySD expects: random_poisson(min, max, mean, shift, stretch, seed)\n    random_poisson_expression = \"\"\"\n    np.clip(\n        np.random.poisson(lam=%(2)s, size=%(size)s) * %(4)s + %(3)s,",
        "detail": "2025.fix_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "test_random_poisson_function",
        "kind": 2,
        "importPath": "2025.fix_pysd_poisson",
        "description": "2025.fix_pysd_poisson",
        "peekOfCode": "def test_random_poisson_function():\n    \"\"\"Test the random_poisson function\"\"\"\n    print(\"\\n🧪 TESTING RANDOM POISSON FUNCTION:\")\n    print(\"=\" * 50)\n    # Test parameters (from your Vensim model)\n    min_val = 0\n    max_val = 5\n    mean = 1.0 * 0.0625  # accident_rate * TIME_STEP\n    shift = 0\n    stretch = 1",
        "detail": "2025.fix_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "create_corrected_model",
        "kind": 2,
        "importPath": "2025.fix_pysd_poisson",
        "description": "2025.fix_pysd_poisson",
        "peekOfCode": "def create_corrected_model():\n    \"\"\"Create a corrected model using the proper PySD approach\"\"\"\n    print(f\"\\n🔧 CREATING CORRECTED MODEL:\")\n    print(\"=\" * 50)\n    # First, add random_poisson to PySD\n    add_random_poisson_to_pysd()\n    # Now try to translate the model again\n    try:\n        print(\"Translating model with random_poisson support...\")\n        model = pysd.read_vensim('2025/model_13.mdl')",
        "detail": "2025.fix_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"performance\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "performance",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def performance():\n    \"\"\"\n    add stochasticity potentially generative vs protective generative can be additive with a small stochastic component and for protective with can have a rare event large impact (like safety) combined performance determines endogenous resource inflow of future\n    \"\"\"\n    value = xr.DataArray(np.nan, {\"Goal\": _subscript_dict[\"Goal\"]}, [\"Goal\"])\n    value.loc[[\"A\"]] = (\n        caa() * float(resources().loc[\"A\"])\n        + cba() * float(resources().loc[\"B\"])\n        + (1 - sw_a_to_protective()) * resource_generative_outcome()\n        + sw_a_to_protective() * shock_effect_on_performance()",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "sw_b_to_protective",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def sw_b_to_protective():\n    return 1\n@component.add(\n    name=\"change in asp\",\n    units=\"1/Month\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"perceived_perfromance_gap\": 1,",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "change_in_asp",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def change_in_asp():\n    \"\"\"\n    there should be some nonlinearity here, if perf gap is zero, change in aspirations should be positive rather than zero. Georgia: adding (1+k asp*Accident shock level), with big accidents, aspiration accelerates. -> crisis reveal aspirations. “Aspirations adjust to the performance gap at a base rate determined by t change asp, but this rate is multiplied by (1 + sensitivity × shock). If shocks are present, managers shorten the time horizon for adjustment — they react faster.”\n    \"\"\"\n    return (\n        -perceived_perfromance_gap()\n        * sw_endogen_aspiration()\n        * (1 + k_asp() * accident_shock_level())\n        / t_change_asp()\n    )",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "accident_rate",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def accident_rate():\n    return 1\n@component.add(name=\"accident severity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef accident_severity():\n    \"\"\"\n    Magnitude of performance loss per accident event\n    \"\"\"\n    return 10\n@component.add(\n    name=\"Accident shock level\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "accident_severity",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def accident_severity():\n    \"\"\"\n    Magnitude of performance loss per accident event\n    \"\"\"\n    return 10\n@component.add(\n    name=\"Accident shock level\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_accident_shock_level\": 1},",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "accident_shock_level",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def accident_shock_level():\n    return _integ_accident_shock_level()\n_integ_accident_shock_level = Integ(\n    lambda: accidents() - recovery_rate(), lambda: 0, \"_integ_accident_shock_level\"\n)\n@component.add(\n    name=\"accidents\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"accident_rate\": 1, \"time_step\": 1, \"seed\": 1, \"accident_severity\": 1},",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "accidents",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def accidents():\n    \"\"\"\n    Uses PySD functionspace random_poisson function\n    Implements Vensim RANDOM POISSON(0, 5, accident_rate*TIME_STEP, 0, 1, seed)\n    This will use the PySD functionspace random_poisson when the model is loaded\n    \"\"\"\n    # Use the PySD functionspace random_poisson function\n    # This will be handled by PySD's functionspace when the model is loaded\n    # with the fix_pysd_poisson.py applied\n    # The functionspace approach uses this pattern:",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "random_poisson",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def random_poisson(min_val, max_val, mean, shift, stretch, seed_val):\n    \"\"\"\n    Proper implementation of Vensim RANDOM POISSON function\n    Following PySD's pattern for random functions\n    \"\"\"\n    # Use time-based seed for variation during simulation\n    # This ensures accidents vary over time, not just based on fixed seed\n    time_based_seed = (int(seed_val) + int(time() * 1000)) % 10000\n    # Set random seed\n    np.random.seed(time_based_seed)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "recovery_time",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def recovery_time():\n    return float(\n        np.maximum(0.1, recovery_time_base() / (1 + k_asp() * total_investments()))\n    )\n@component.add(\n    name=\"total investments\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"resources\": 1},\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "total_investments",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def total_investments():\n    return sum(resources().rename({\"Goal\": \"Goal!\"}), dim=[\"Goal!\"])\n@component.add(\n    name=\"recovery rate\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"accident_shock_level\": 1, \"recovery_time\": 1},\n)\ndef recovery_rate():\n    return accident_shock_level() / recovery_time()",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "recovery_rate",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def recovery_rate():\n    return accident_shock_level() / recovery_time()\n@component.add(\n    name=\"k asp\", limits=(0.001, 0.5), comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef k_asp():\n    \"\"\"\n    Sensitivity of aspiration updating to shocks. Higher = aspirations move faster when accidents occur\n    \"\"\"\n    return 0.02",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "k_asp",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def k_asp():\n    \"\"\"\n    Sensitivity of aspiration updating to shocks. Higher = aspirations move faster when accidents occur\n    \"\"\"\n    return 0.02\n@component.add(\n    name=\"recovery time base\",\n    units=\"Month\",\n    limits=(5.0, 30.0, 1.0),\n    comp_type=\"Constant\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "recovery_time_base",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def recovery_time_base():\n    return 12\n@component.add(\n    name=\"shock sensitivity\", units=\"Dmnl\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef shock_sensitivity():\n    return 1\n@component.add(\n    name=\"shock effect on performance\",\n    comp_type=\"Auxiliary\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "shock_sensitivity",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def shock_sensitivity():\n    return 1\n@component.add(\n    name=\"shock effect on performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"accident_shock_level\": 1, \"shock_sensitivity\": 1},\n)\ndef shock_effect_on_performance():\n    return accident_shock_level() * shock_sensitivity()",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "shock_effect_on_performance",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def shock_effect_on_performance():\n    return accident_shock_level() * shock_sensitivity()\n@component.add(\n    name=\"sw A to protective\",\n    limits=(0.0, 1.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef sw_a_to_protective():\n    return 1",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "sw_a_to_protective",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def sw_a_to_protective():\n    return 1\n@component.add(\n    name=\"resource generative outcome\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"gstdv\": 1, \"seed\": 1, \"time\": 1},\n)\ndef resource_generative_outcome():\n    return float(",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "resource_generative_outcome",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def resource_generative_outcome():\n    return float(\n        stats.truncnorm.rvs(\n            xidz(-10 - 0, gstdv(), -np.inf),\n            xidz(10 - 0, gstdv(), np.inf),\n            loc=0,\n            scale=gstdv(),\n            size=(),\n        )\n    )",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "aspiration",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def aspiration():\n    \"\"\"\n    if perfromance is consistently falling short, adjust aspiration down if aspirations are consistently met, adjust them up future: market trends, ecosystem dynamics\n    \"\"\"\n    return _integ_aspiration()\n_integ_aspiration = Integ(\n    lambda: change_in_asp(),\n    lambda: xr.DataArray(\n        exogen_aspiration(), {\"Goal\": _subscript_dict[\"Goal\"]}, [\"Goal\"]\n    ),",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "init_perc_comb_perf",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def init_perc_comb_perf():\n    return _initial_init_perc_comb_perf()\n_initial_init_perc_comb_perf = Initial(\n    lambda: caa() * init_a() + cba() * init_b() + cab() * init_a() + cbb() * init_b(),\n    \"_initial_init_perc_comb_perf\",\n)\n@component.add(\n    name=\"Perceived comb perf\",\n    units=\"Dmnl\",\n    comp_type=\"Stateful\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "perceived_comb_perf",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def perceived_comb_perf():\n    return _integ_perceived_comb_perf()\n_integ_perceived_comb_perf = Integ(\n    lambda: change_in_perc_comb_perf(),\n    lambda: init_perc_comb_perf(),\n    \"_integ_perceived_comb_perf\",\n)\n@component.add(\n    name=\"Perceived perfromance gap\",\n    units=\"Dmnl\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "perceived_perfromance_gap",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def perceived_perfromance_gap():\n    return _smooth_perceived_perfromance_gap()\n_smooth_perceived_perfromance_gap = Smooth(\n    lambda: performance_gap(),\n    lambda: xr.DataArray(\n        t_update_perf_gap(), {\"Goal\": _subscript_dict[\"Goal\"]}, [\"Goal\"]\n    ),\n    lambda: performance_gap(),\n    lambda: 1,\n    \"_smooth_perceived_perfromance_gap\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "change_in_perc_comb_perf",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def change_in_perc_comb_perf():\n    return (combined_performance() - perceived_comb_perf()) / if_then_else(\n        combined_performance() > perceived_comb_perf(),\n        lambda: t_adj_perc_upwards(),\n        lambda: t_adj_perc_downwards(),\n    )\n@component.add(\n    name=\"t adj perc upwards\",\n    units=\"Month\",\n    limits=(0.01, 50.0, 0.5),",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "t_adj_perc_upwards",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def t_adj_perc_upwards():\n    return 20\n@component.add(\n    name=\"resource inflow\",\n    units=\"Dollar/Month\",\n    limits=(0.0, 100.0, 0.1),\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"sw_endog_inflow\": 2, \"endogen_resource_inflow\": 1, \"exogen_inflow\": 1},\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "resource_inflow",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def resource_inflow():\n    \"\"\"\n    endogenous inflow: function of performance (combined performance)\n    \"\"\"\n    return (\n        sw_endog_inflow() * endogen_resource_inflow()\n        + (1 - sw_endog_inflow()) * exogen_inflow()\n    )\n@component.add(\n    name=\"endogen resource inflow\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "endogen_resource_inflow",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def endogen_resource_inflow():\n    \"\"\"\n    https://www.desmos.com/calculator/dnhbwdyqdq\n    \"\"\"\n    return (1 / sens_res_inflow()) * float(\n        np.log(\n            1\n            + float(\n                np.exp(sens_res_inflow() * inflow_per_perf() * perceived_comb_perf())\n            )",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"exogen aspiration\",\n    units=\"Dmnl\",\n    limits=(0.0, 1000.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef exogen_aspiration():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "exogen_aspiration",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def exogen_aspiration():\n    \"\"\"\n    if perfromance is consistently falling short, adjust aspiration down if aspirations are consistently met, adjust them up future: market trends, ecosystem dynamics\n    \"\"\"\n    return 100\n@component.add(\n    name=\"sens res inflow\",\n    units=\"Dmnl\",\n    limits=(0.0, 2.0, 0.1),\n    comp_type=\"Constant\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "sens_res_inflow",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def sens_res_inflow():\n    return 1\n@component.add(\n    name=\"t change asp\",\n    units=\"Month\",\n    limits=(1.0, 50.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_change_asp():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "t_change_asp",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def t_change_asp():\n    return 40\n@component.add(\n    name=\"gstdv\",\n    units=\"Dmnl\",\n    limits=(0.0, 30.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef gstdv():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "gstdv",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def gstdv():\n    return 0\n@component.add(\n    name=\"inflow per perf\",\n    units=\"Dollar/Month\",\n    limits=(0.0, 0.5, 0.001),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef inflow_per_perf():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "inflow_per_perf",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def inflow_per_perf():\n    return 0.05\n@component.add(\n    name=\"t adj perc downwards\",\n    units=\"Month\",\n    limits=(0.01, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_adj_perc_downwards():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "t_adj_perc_downwards",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def t_adj_perc_downwards():\n    return 2\n@component.add(\n    name=\"t update perf gap\",\n    units=\"Month\",\n    limits=(1.0, 20.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_update_perf_gap():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "t_update_perf_gap",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def t_update_perf_gap():\n    return 5\n@component.add(\n    name=\"performance gap\",\n    units=\"Dmnl\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"aspiration\": 1, \"performance\": 1},\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "performance_gap",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def performance_gap():\n    return aspiration() - performance()\n@component.add(\n    name=\"sw endog inflow\",\n    units=\"Dmnl\",\n    limits=(0.0, 1.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef sw_endog_inflow():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "sw_endog_inflow",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def sw_endog_inflow():\n    return 0\n@component.add(\n    name=\"sw endogen aspiration\",\n    units=\"Dmnl\",\n    limits=(0.0, 1.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef sw_endogen_aspiration():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "sw_endogen_aspiration",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def sw_endogen_aspiration():\n    return 0\n@component.add(\n    name=\"init resource\",\n    units=\"Dollar\",\n    limits=(0.0, 200.0, 1.0),\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"init_a\": 1, \"init_b\": 1},",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "init_resource",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def init_resource():\n    value = xr.DataArray(np.nan, {\"Goal\": _subscript_dict[\"Goal\"]}, [\"Goal\"])\n    value.loc[[\"A\"]] = init_a()\n    value.loc[[\"B\"]] = init_b()\n    return value\n@component.add(\n    name=\"combined performance\",\n    units=\"Dmnl\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "combined_performance",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def combined_performance():\n    return sum(performance().rename({\"Goal\": \"Goal!\"}), dim=[\"Goal!\"])\n@component.add(\n    name=\"init res\",\n    units=\"Dollar\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Stateful\",\n    comp_subtype=\"Initial\",\n    depends_on={\"_initial_init_res\": 1},\n    other_deps={",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "init_res",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def init_res():\n    return _initial_init_res()\n_initial_init_res = Initial(\n    lambda: (1 - eq_init()) * init_resource(), \"_initial_init_res\"\n)\n@component.add(\n    name=\"inv weight\",\n    units=\"Dmnl\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "inv_weight",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def inv_weight():\n    return np.exp(softmax_snstvty() * performance_gap()) / pg_denum()\n@component.add(\n    name=\"deterioration resources\",\n    units=\"Dollar/Month\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"resources\": 1, \"t_deteriorate\": 1},\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "deterioration_resources",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def deterioration_resources():\n    return resources() / t_deteriorate()\n@component.add(\n    name=\"Resources\",\n    units=\"Dollar\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_resources\": 1},\n    other_deps={",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "resources",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def resources():\n    return _integ_resources()\n_integ_resources = Integ(\n    lambda: maturing_inv() - deterioration_resources(),\n    lambda: init_res(),\n    \"_integ_resources\",\n)\n@component.add(\n    name=\"init A\",\n    units=\"Dollar\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "init_a",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def init_a():\n    return 80\n@component.add(\n    name=\"pg denum\",\n    units=\"Dmnl\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"softmax_snstvty\": 1, \"performance_gap\": 1},\n)\ndef pg_denum():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "pg_denum",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def pg_denum():\n    \"\"\"\n    (exp(softmax snstvty * performance gap[A]) + exp(softmax snstvty * performance gap[B]))\n    \"\"\"\n    return sum(\n        np.exp(softmax_snstvty() * performance_gap().rename({\"Goal\": \"Goal!\"})),\n        dim=[\"Goal!\"],\n    )\n@component.add(\n    name=\"init B\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "init_b",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def init_b():\n    return 80\n@component.add(\n    name=\"maturing inv\",\n    units=\"Dollar/Month\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"undeveloped_resources\": 1, \"t_mature\": 1},\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "maturing_inv",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def maturing_inv():\n    return undeveloped_resources() / t_mature()\n@component.add(\n    name=\"init UR\",\n    units=\"Dollar\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Stateful\",\n    comp_subtype=\"Initial\",\n    depends_on={\"_initial_init_ur\": 1},\n    other_deps={",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "init_ur",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def init_ur():\n    return _initial_init_ur()\n_initial_init_ur = Initial(\n    lambda: (init_res() / t_deteriorate()) * t_mature(), \"_initial_init_ur\"\n)\n@component.add(\n    name=\"t mature\",\n    units=\"Month\",\n    limits=(1.0, 20.0, 1.0),\n    comp_type=\"Constant\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "t_mature",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def t_mature():\n    return 5\n@component.add(\n    name=\"Undeveloped Resources\",\n    units=\"Dollar\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_undeveloped_resources\": 1},\n    other_deps={",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "undeveloped_resources",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def undeveloped_resources():\n    return _integ_undeveloped_resources()\n_integ_undeveloped_resources = Integ(\n    lambda: investing() - maturing_inv(),\n    lambda: init_ur(),\n    \"_integ_undeveloped_resources\",\n)\n@component.add(\n    name=\"exogen inflow\",\n    units=\"Dollar/Month\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "exogen_inflow",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def exogen_inflow():\n    return 8\n@component.add(\n    name=\"eq init\",\n    units=\"Dmnl\",\n    limits=(0.0, 1.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef eq_init():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "eq_init",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def eq_init():\n    return 0\n@component.add(\n    name=\"softmax snstvty\",\n    units=\"Dmnl\",\n    limits=(0.0, 0.5, 0.001),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef softmax_snstvty():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "softmax_snstvty",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def softmax_snstvty():\n    return 0.03\n@component.add(\n    name=\"investing\",\n    units=\"Dollar/Month\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"inv_weight\": 1, \"resource_inflow\": 1},\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "investing",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def investing():\n    return inv_weight() * resource_inflow()\n@component.add(\n    name=\"cAB\",\n    units=\"1/Dollar\",\n    limits=(-1.0, 1.0, 0.01),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef cab():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "cab",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def cab():\n    return 0\n@component.add(\n    name=\"cBA\",\n    units=\"1/Dollar\",\n    limits=(-1.0, 1.0, 0.01),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef cba():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "cba",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def cba():\n    return 0\n@component.add(\n    name=\"cAA\",\n    units=\"1/Dollar\",\n    limits=(0.0, 1.0, 0.01),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef caa():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "caa",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def caa():\n    return 1\n@component.add(\n    name=\"cBB\",\n    units=\"1/Dollar\",\n    limits=(0.0, 1.0, 0.01),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef cbb():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "cbb",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def cbb():\n    return 1\n@component.add(\n    name=\"t deteriorate\",\n    units=\"Month\",\n    limits=(1.0, 50.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_deteriorate():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "t_deteriorate",
        "kind": 2,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "def t_deteriorate():\n    return 25",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "__pysd_version__ = \"3.14.3\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\n_subscript_dict = {\"Goal\": [\"A\", \"B\"]}\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\n_subscript_dict = {\"Goal\": [\"A\", \"B\"]}\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_root = Path(__file__).parent\n_subscript_dict = {\"Goal\": [\"A\", \"B\"]}\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_subscript_dict",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_subscript_dict = {\"Goal\": [\"A\", \"B\"]}\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_integ_accident_shock_level",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_integ_accident_shock_level = Integ(\n    lambda: accidents() - recovery_rate(), lambda: 0, \"_integ_accident_shock_level\"\n)\n@component.add(\n    name=\"accidents\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"accident_rate\": 1, \"time_step\": 1, \"seed\": 1, \"accident_severity\": 1},\n)\ndef accidents():",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_integ_aspiration",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_integ_aspiration = Integ(\n    lambda: change_in_asp(),\n    lambda: xr.DataArray(\n        exogen_aspiration(), {\"Goal\": _subscript_dict[\"Goal\"]}, [\"Goal\"]\n    ),\n    \"_integ_aspiration\",\n)\n@component.add(\n    name=\"init perc comb perf\",\n    units=\"Dmnl\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_initial_init_perc_comb_perf",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_initial_init_perc_comb_perf = Initial(\n    lambda: caa() * init_a() + cba() * init_b() + cab() * init_a() + cbb() * init_b(),\n    \"_initial_init_perc_comb_perf\",\n)\n@component.add(\n    name=\"Perceived comb perf\",\n    units=\"Dmnl\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_perceived_comb_perf\": 1},",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_integ_perceived_comb_perf",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_integ_perceived_comb_perf = Integ(\n    lambda: change_in_perc_comb_perf(),\n    lambda: init_perc_comb_perf(),\n    \"_integ_perceived_comb_perf\",\n)\n@component.add(\n    name=\"Perceived perfromance gap\",\n    units=\"Dmnl\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Stateful\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_smooth_perceived_perfromance_gap",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_smooth_perceived_perfromance_gap = Smooth(\n    lambda: performance_gap(),\n    lambda: xr.DataArray(\n        t_update_perf_gap(), {\"Goal\": _subscript_dict[\"Goal\"]}, [\"Goal\"]\n    ),\n    lambda: performance_gap(),\n    lambda: 1,\n    \"_smooth_perceived_perfromance_gap\",\n)\n@component.add(",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_initial_init_res",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_initial_init_res = Initial(\n    lambda: (1 - eq_init()) * init_resource(), \"_initial_init_res\"\n)\n@component.add(\n    name=\"inv weight\",\n    units=\"Dmnl\",\n    subscripts=[\"Goal\"],\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"softmax_snstvty\": 1, \"performance_gap\": 1, \"pg_denum\": 1},",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_integ_resources",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_integ_resources = Integ(\n    lambda: maturing_inv() - deterioration_resources(),\n    lambda: init_res(),\n    \"_integ_resources\",\n)\n@component.add(\n    name=\"init A\",\n    units=\"Dollar\",\n    limits=(0.0, 200.0, 1.0),\n    comp_type=\"Constant\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_initial_init_ur",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_initial_init_ur = Initial(\n    lambda: (init_res() / t_deteriorate()) * t_mature(), \"_initial_init_ur\"\n)\n@component.add(\n    name=\"t mature\",\n    units=\"Month\",\n    limits=(1.0, 20.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "_integ_undeveloped_resources",
        "kind": 5,
        "importPath": "2025.model_13_gl",
        "description": "2025.model_13_gl",
        "peekOfCode": "_integ_undeveloped_resources = Integ(\n    lambda: investing() - maturing_inv(),\n    lambda: init_ur(),\n    \"_integ_undeveloped_resources\",\n)\n@component.add(\n    name=\"exogen inflow\",\n    units=\"Dollar/Month\",\n    limits=(0.0, 20.0, 0.1),\n    comp_type=\"Constant\",",
        "detail": "2025.model_13_gl",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"Attention growth\",",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_growth",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def attention_growth():\n    return np.maximum(\n        0, (desired_attention_goal() - attention_resource()) * chance_of_errors()\n    ) / (t_to_grow_attention() / 16)\n@component.add(\n    name=\"change in knowledge\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"experience\": 1, \"depreciation\": 1},\n)",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "change_in_knowledge",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def change_in_knowledge():\n    return experience() - depreciation()\n@component.add(\n    name=\"change in attention\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"attention_growth\": 1, \"attention_erosion\": 1},\n)\ndef change_in_attention():\n    return attention_growth() - attention_erosion()",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "change_in_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def change_in_attention():\n    return attention_growth() - attention_erosion()\n@component.add(\n    name=\"Implied safety performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"organization_knowledge\": 1},\n)\ndef implied_safety_performance():\n    return organization_knowledge()",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "implied_safety_performance",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def implied_safety_performance():\n    return organization_knowledge()\n@component.add(\n    name=\"Chance of Errors\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"gamma\": 1,\n        \"implied_safety_performance\": 1,\n        \"safety_threshold\": 1,",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "chance_of_errors",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def chance_of_errors():\n    return gamma() * (\n        1\n        - 1\n        / (\n            1\n            + np.exp(\n                -pressure_from_manager()\n                * (implied_safety_performance() - safety_threshold())\n            )",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_on_safety",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def attention_on_safety():\n    return 1 / (\n        1\n        + np.exp(\n            -attention_capability()\n            * (attention_resource() - normal_attention_on_safety())\n        )\n    )\n@component.add(name=\"gamma\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef gamma():",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "gamma",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def gamma():\n    return 0.1\n@component.add(\n    name=\"depreciation\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"organization_knowledge\": 1,\n        \"attention_on_safety\": 1,\n        \"t_to_depreciate\": 1,",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "depreciation",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def depreciation():\n    return (\n        np.maximum(0, organization_knowledge() - attention_on_safety())\n        / t_to_depreciate()\n    )\n@component.add(\n    name=\"Organization knowledge\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_organization_knowledge\": 1},",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "organization_knowledge",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def organization_knowledge():\n    return _integ_organization_knowledge()\n_integ_organization_knowledge = Integ(\n    lambda: experience() - depreciation(),\n    lambda: initial_state(),\n    \"_integ_organization_knowledge\",\n)\n@component.add(\n    name=\"T to depreciate\",\n    limits=(1.0, 50.0, 1.0),",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_depreciate",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def t_to_depreciate():\n    return 5\n@component.add(\n    name=\"experience\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"attention_on_safety\": 1,\n        \"organization_knowledge\": 1,\n        \"t_to_gain_experience\": 1,",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "experience",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def experience():\n    return np.maximum(\n        0, (attention_on_safety() - organization_knowledge()) / t_to_gain_experience()\n    )\n@component.add(\n    name=\"T to grow attention\",\n    limits=(1.0, 5.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_grow_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def t_to_grow_attention():\n    return 1\n@component.add(\n    name=\"Normal Attention on Safety\",\n    limits=(0.0, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef normal_attention_on_safety():\n    return 0.5",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "normal_attention_on_safety",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def normal_attention_on_safety():\n    return 0.5\n@component.add(\n    name=\"T to gain experience\",\n    limits=(1.0, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_to_gain_experience():\n    return 10",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_gain_experience",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def t_to_gain_experience():\n    return 10\n@component.add(\n    name=\"attention capability\",\n    limits=(0.5, 30.0, 0.2),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef attention_capability():\n    return 10",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_capability",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def attention_capability():\n    return 10\n@component.add(\n    name=\"desired attention goal\",\n    limits=(0.1, 10.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef desired_attention_goal():\n    return 1",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "desired_attention_goal",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def desired_attention_goal():\n    return 1\n@component.add(\n    name=\"initial focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef initial_focus():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_focus",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def initial_focus():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())\n@component.add(\n    name=\"initial state\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef initial_state():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_state",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def initial_state():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())\n@component.add(\n    name=\"pressure from manager\",\n    limits=(0.0, 50.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef pressure_from_manager():\n    return 50",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "pressure_from_manager",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def pressure_from_manager():\n    return 50\n@component.add(\n    name=\"Attention Resource\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_attention_resource\": 1},\n    other_deps={\n        \"_integ_attention_resource\": {\n            \"initial\": {\"initial_focus\": 1},",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_resource",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def attention_resource():\n    return _integ_attention_resource()\n_integ_attention_resource = Integ(\n    lambda: attention_growth() - attention_erosion(),\n    lambda: initial_focus(),\n    \"_integ_attention_resource\",\n)\n@component.add(\n    name=\"Safety threshold\",\n    limits=(0.0, 1.0, 0.02),",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "safety_threshold",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def safety_threshold():\n    return 0.5\n@component.add(\n    name=\"seed\", limits=(0.0, 100.0, 1.0), comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef seed():\n    return 1\n@component.add(\n    name=\"Attention erosion\",\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"Attention erosion\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"attention_resource\": 1, \"t_to_lose_attention\": 1},\n)\ndef attention_erosion():\n    return attention_resource() / t_to_lose_attention()",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_erosion",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def attention_erosion():\n    return attention_resource() / t_to_lose_attention()\n@component.add(\n    name=\"T to lose attention\",\n    limits=(1.0, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_to_lose_attention():\n    return 10",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_lose_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "def t_to_lose_attention():\n    return 10",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "_integ_organization_knowledge",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "_integ_organization_knowledge = Integ(\n    lambda: experience() - depreciation(),\n    lambda: initial_state(),\n    \"_integ_organization_knowledge\",\n)\n@component.add(\n    name=\"T to depreciate\",\n    limits=(1.0, 50.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "_integ_attention_resource",
        "kind": 5,
        "importPath": "Experiment.safety focus_v10(Experiment)",
        "description": "Experiment.safety focus_v10(Experiment)",
        "peekOfCode": "_integ_attention_resource = Integ(\n    lambda: attention_growth() - attention_erosion(),\n    lambda: initial_focus(),\n    \"_integ_attention_resource\",\n)\n@component.add(\n    name=\"Safety threshold\",\n    limits=(0.0, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",",
        "detail": "Experiment.safety focus_v10(Experiment)",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(name=\"exogenous shock\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef exogenous_shock():",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "exogenous_shock",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def exogenous_shock():\n    return 1\n@component.add(\n    name=\"Error Occurance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"swtich\": 1,\n        \"seed\": 1,\n        \"chance_of_errors\": 1,",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "error_occurance",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def error_occurance():\n    \"\"\"\n    IF THEN ELSE( INTEGER(Time)=Time, IF THEN ELSE(RANDOM UNIFORM(0, 1, seed)<Chance of Errors, 1, 0),0)\n    \"\"\"\n    return if_then_else(\n        swtich() == 0,\n        lambda: if_then_else(\n            integer(time()) == time(),\n            lambda: if_then_else(\n                np.random.uniform(0, 1, size=()) < chance_of_errors(),",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "swtich",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def swtich():\n    return 1\n@component.add(\n    name=\"Implied safety performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"organization_knowledge\": 1},\n)\ndef implied_safety_performance():\n    return organization_knowledge()",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "implied_safety_performance",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def implied_safety_performance():\n    return organization_knowledge()\n@component.add(\n    name=\"Chance of Errors\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"gamma\": 1,\n        \"pressure_from_manager\": 1,\n        \"safety_threshold\": 1,",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "chance_of_errors",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def chance_of_errors():\n    return gamma() * (\n        1\n        - 1\n        / (\n            1\n            + np.exp(\n                -pressure_from_manager()\n                * (implied_safety_performance() - safety_threshold())\n            )",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_on_safety",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def attention_on_safety():\n    return 1 / (\n        1\n        + np.exp(\n            -attention_capability()\n            * (attention_resource() - normal_attention_on_safety())\n        )\n    )\n@component.add(name=\"gamma\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef gamma():",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "gamma",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def gamma():\n    return 0.1\n@component.add(\n    name=\"depreciation\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"organization_knowledge\": 1,\n        \"attention_on_safety\": 1,\n        \"t_to_depreciate\": 1,",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "depreciation",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def depreciation():\n    return (\n        np.maximum(0, organization_knowledge() - attention_on_safety())\n        / t_to_depreciate()\n    )\n@component.add(\n    name=\"Organization knowledge\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_organization_knowledge\": 1},",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "organization_knowledge",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def organization_knowledge():\n    return _integ_organization_knowledge()\n_integ_organization_knowledge = Integ(\n    lambda: experience() - depreciation(),\n    lambda: initial_state(),\n    \"_integ_organization_knowledge\",\n)\n@component.add(\n    name=\"Attention growth\",\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_growth",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def attention_growth():\n    return np.maximum(\n        0, (desired_attention_goal() - attention_resource()) * error_occurance()\n    ) / (t_to_grow_attention() / 16)\n@component.add(\n    name=\"T to depreciate\",\n    limits=(1.0, 50.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_depreciate",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def t_to_depreciate():\n    return 5\n@component.add(\n    name=\"experience\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"attention_on_safety\": 1,\n        \"organization_knowledge\": 1,\n        \"t_to_gain_experience\": 1,",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "experience",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def experience():\n    return np.maximum(\n        0, (attention_on_safety() - organization_knowledge()) / t_to_gain_experience()\n    )\n@component.add(\n    name=\"T to grow attention\",\n    limits=(1.0, 5.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_grow_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def t_to_grow_attention():\n    return 1\n@component.add(\n    name=\"Normal Attention on Safety\",\n    limits=(0.0, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef normal_attention_on_safety():\n    return 0.5",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "normal_attention_on_safety",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def normal_attention_on_safety():\n    return 0.5\n@component.add(\n    name=\"T to gain experience\",\n    limits=(1.0, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_to_gain_experience():\n    return 10",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_gain_experience",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def t_to_gain_experience():\n    return 10\n@component.add(\n    name=\"attention capability\",\n    limits=(0.5, 30.0, 0.2),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef attention_capability():\n    return 10",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_capability",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def attention_capability():\n    return 10\n@component.add(\n    name=\"desired attention goal\",\n    limits=(0.5, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef desired_attention_goal():\n    return 1",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "desired_attention_goal",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def desired_attention_goal():\n    return 1\n@component.add(\n    name=\"initial focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef initial_focus():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_focus",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def initial_focus():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())\n@component.add(\n    name=\"initial state\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef initial_state():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_state",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def initial_state():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())\n@component.add(\n    name=\"pressure from manager\",\n    limits=(0.0, 20.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef pressure_from_manager():\n    return 10",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "pressure_from_manager",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def pressure_from_manager():\n    return 10\n@component.add(\n    name=\"Attention Resource\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_attention_resource\": 1},\n    other_deps={\n        \"_integ_attention_resource\": {\n            \"initial\": {\"initial_focus\": 1},",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_resource",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def attention_resource():\n    return _integ_attention_resource()\n_integ_attention_resource = Integ(\n    lambda: attention_growth() - attention_erosion(),\n    lambda: initial_focus(),\n    \"_integ_attention_resource\",\n)\n@component.add(\n    name=\"Safety threshold\",\n    limits=(0.0, 1.0, 0.02),",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "safety_threshold",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def safety_threshold():\n    return 0.5\n@component.add(\n    name=\"seed\", limits=(0.0, 100.0, 1.0), comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef seed():\n    return 1\n@component.add(\n    name=\"Attention erosion\",\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"Attention erosion\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"attention_resource\": 1, \"t_to_lose_attention\": 1},\n)\ndef attention_erosion():\n    return attention_resource() / t_to_lose_attention()",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_erosion",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def attention_erosion():\n    return attention_resource() / t_to_lose_attention()\n@component.add(\n    name=\"T to lose attention\",\n    limits=(1.0, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_to_lose_attention():\n    return 10",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_lose_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "def t_to_lose_attention():\n    return 10",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "_integ_organization_knowledge",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "_integ_organization_knowledge = Integ(\n    lambda: experience() - depreciation(),\n    lambda: initial_state(),\n    \"_integ_organization_knowledge\",\n)\n@component.add(\n    name=\"Attention growth\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "_integ_attention_resource",
        "kind": 5,
        "importPath": "Experiment.safety focus_v8(Experiment)",
        "description": "Experiment.safety focus_v8(Experiment)",
        "peekOfCode": "_integ_attention_resource = Integ(\n    lambda: attention_growth() - attention_erosion(),\n    lambda: initial_focus(),\n    \"_integ_attention_resource\",\n)\n@component.add(\n    name=\"Safety threshold\",\n    limits=(0.0, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",",
        "detail": "Experiment.safety focus_v8(Experiment)",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Month\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Month\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"change in knowledge\",",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "change_in_knowledge",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def change_in_knowledge():\n    return experience() - depreciation()\n@component.add(\n    name=\"change in attention\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"attention_growth\": 1, \"attention_erosion\": 1},\n)\ndef change_in_attention():\n    return attention_growth() - attention_erosion()",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "change_in_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def change_in_attention():\n    return attention_growth() - attention_erosion()\n@component.add(\n    name=\"exogenous shock\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"time\": 1},\n)\ndef exogenous_shock():\n    return pulse(__data[\"time\"], 20, width=1) * 3",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "exogenous_shock",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def exogenous_shock():\n    return pulse(__data[\"time\"], 20, width=1) * 3\n@component.add(\n    name=\"Error Occurance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"swtich\": 1,\n        \"seed\": 1,\n        \"time\": 2,",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "error_occurance",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def error_occurance():\n    \"\"\"\n    IF THEN ELSE( INTEGER(Time)=Time, IF THEN ELSE(RANDOM UNIFORM(0, 1, seed)<Chance of Errors, 1, 0),0)\n    \"\"\"\n    return if_then_else(\n        swtich() == 0,\n        lambda: if_then_else(\n            integer(time()) == time(),\n            lambda: if_then_else(\n                np.random.uniform(0, 1, size=()) < chance_of_errors(),",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "swtich",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def swtich():\n    return 1\n@component.add(\n    name=\"Implied safety performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"organization_knowledge\": 1},\n)\ndef implied_safety_performance():\n    return organization_knowledge()",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "implied_safety_performance",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def implied_safety_performance():\n    return organization_knowledge()\n@component.add(\n    name=\"Chance of Errors\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"gamma\": 1,\n        \"pressure_from_manager\": 1,\n        \"implied_safety_performance\": 1,",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "chance_of_errors",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def chance_of_errors():\n    return gamma() * (\n        1\n        - 1\n        / (\n            1\n            + np.exp(\n                -pressure_from_manager()\n                * (implied_safety_performance() - safety_threshold())\n            )",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_on_safety",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def attention_on_safety():\n    return 1 / (\n        1\n        + np.exp(\n            -attention_capability()\n            * (attention_resource() - normal_attention_on_safety())\n        )\n    )\n@component.add(name=\"gamma\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef gamma():",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "gamma",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def gamma():\n    return 0.1\n@component.add(\n    name=\"depreciation\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"organization_knowledge\": 1,\n        \"attention_on_safety\": 1,\n        \"t_to_depreciate\": 1,",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "depreciation",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def depreciation():\n    return (\n        np.maximum(0, organization_knowledge() - attention_on_safety())\n        / t_to_depreciate()\n    )\n@component.add(\n    name=\"Organization knowledge\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_organization_knowledge\": 1},",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "organization_knowledge",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def organization_knowledge():\n    return _integ_organization_knowledge()\n_integ_organization_knowledge = Integ(\n    lambda: experience() - depreciation(),\n    lambda: initial_state(),\n    \"_integ_organization_knowledge\",\n)\n@component.add(\n    name=\"Attention growth\",\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_growth",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def attention_growth():\n    return np.maximum(\n        0, (desired_attention_goal() - attention_resource()) * error_occurance()\n    ) / (t_to_grow_attention() / 16)\n@component.add(\n    name=\"T to depreciate\",\n    limits=(1.0, 50.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_depreciate",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def t_to_depreciate():\n    return 5\n@component.add(\n    name=\"experience\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"attention_on_safety\": 1,\n        \"organization_knowledge\": 1,\n        \"t_to_gain_experience\": 1,",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "experience",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def experience():\n    return np.maximum(\n        0, (attention_on_safety() - organization_knowledge()) / t_to_gain_experience()\n    )\n@component.add(\n    name=\"T to grow attention\",\n    limits=(1.0, 5.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_grow_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def t_to_grow_attention():\n    return 1\n@component.add(\n    name=\"Normal Attention on Safety\",\n    limits=(0.0, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef normal_attention_on_safety():\n    return 0.5",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "normal_attention_on_safety",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def normal_attention_on_safety():\n    return 0.5\n@component.add(\n    name=\"T to gain experience\",\n    limits=(1.0, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_to_gain_experience():\n    return 10",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_gain_experience",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def t_to_gain_experience():\n    return 10\n@component.add(\n    name=\"attention capability\",\n    limits=(0.5, 30.0, 0.2),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef attention_capability():\n    return 10",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_capability",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def attention_capability():\n    return 10\n@component.add(\n    name=\"desired attention goal\",\n    limits=(0.5, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef desired_attention_goal():\n    return 1",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "desired_attention_goal",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def desired_attention_goal():\n    return 1\n@component.add(\n    name=\"initial focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef initial_focus():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_focus",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def initial_focus():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())\n@component.add(\n    name=\"initial state\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef initial_state():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "initial_state",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def initial_state():\n    return stats.truncnorm.rvs(0, 1, loc=0.5, scale=0.2, size=())\n@component.add(\n    name=\"pressure from manager\",\n    limits=(0.0, 20.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef pressure_from_manager():\n    return 10",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "pressure_from_manager",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def pressure_from_manager():\n    return 10\n@component.add(\n    name=\"Attention Resource\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_attention_resource\": 1},\n    other_deps={\n        \"_integ_attention_resource\": {\n            \"initial\": {\"initial_focus\": 1},",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_resource",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def attention_resource():\n    return _integ_attention_resource()\n_integ_attention_resource = Integ(\n    lambda: attention_growth() - attention_erosion(),\n    lambda: initial_focus(),\n    \"_integ_attention_resource\",\n)\n@component.add(\n    name=\"Safety threshold\",\n    limits=(0.0, 1.0, 0.02),",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "safety_threshold",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def safety_threshold():\n    return 0.5\n@component.add(\n    name=\"seed\", limits=(0.0, 100.0, 1.0), comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef seed():\n    return 1\n@component.add(\n    name=\"Attention erosion\",\n    comp_type=\"Auxiliary\",",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"Attention erosion\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"attention_resource\": 1, \"t_to_lose_attention\": 1},\n)\ndef attention_erosion():\n    return attention_resource() / t_to_lose_attention()",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "attention_erosion",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def attention_erosion():\n    return attention_resource() / t_to_lose_attention()\n@component.add(\n    name=\"T to lose attention\",\n    limits=(1.0, 50.0, 0.5),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef t_to_lose_attention():\n    return 10",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "t_to_lose_attention",
        "kind": 2,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "def t_to_lose_attention():\n    return 10",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 100,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "_integ_organization_knowledge",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "_integ_organization_knowledge = Integ(\n    lambda: experience() - depreciation(),\n    lambda: initial_state(),\n    \"_integ_organization_knowledge\",\n)\n@component.add(\n    name=\"Attention growth\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "_integ_attention_resource",
        "kind": 5,
        "importPath": "Experiment.safety focus_v9(Experiment)",
        "description": "Experiment.safety focus_v9(Experiment)",
        "peekOfCode": "_integ_attention_resource = Integ(\n    lambda: attention_growth() - attention_erosion(),\n    lambda: initial_focus(),\n    \"_integ_attention_resource\",\n)\n@component.add(\n    name=\"Safety threshold\",\n    limits=(0.0, 1.0, 0.02),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",",
        "detail": "Experiment.safety focus_v9(Experiment)",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"week\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"week\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"PINK NOISE structure\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "pink_noise_structure",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def pink_noise_structure():\n    \"\"\"\n    Contributed by Ed Anderson, MIT/U. Texas - Austin Description: The pink noise molecule described generates a simple random series with autocorrelation. This is useful in representing time series, like rainfall from day to day, in which today's value has some correlation with what happened yesterday. This particular formulation will also have properties such as standard deviation and mean that are insensitive both to the time step and the correlation (smoothing) time. Finally, the output as a whole and the difference in values between any two days is guaranteed to be Gaussian (normal) in distribution. Behavior: Pink noise series will have both a historical and a random component during each period. The relative \"trend-to-noise\" ratio is controlled by the length of the correlation time. As the correlation time approaches zero, the pink noise output will become more independent of its historical value and more \"noisy.\" On the other hand, as the correlation time approaches infinity, the pink noise output will approximate a continuous time random walk or Brownian motion. Displayed above are two time series with correlation times of 1 and 8 months. While both series have approximately the same standard deviation, the 1-month correlation time series is less smooth from period to period than the 8-month series, which is characterized by \"sustained\" swings in a given direction. Note that this behavior will be independent of the time-step. The \"pink\" in pink noise refers to the power spectrum of the output. A time series in which each period's observation is independent of the past is characterized by a flat or \"white\" power spectrum. Smoothing a time series attenuates the higher or \"bluer\" frequencies of the power spectrum, leaving the lower or \"redder\" frequencies relatively stronger in the output. Caveats: This assumes the use of Euler integration with a time step of no more than 1/4 of the correlation time. Very long correlation times should be avoided also as the multiplication in the scaled white noise will become progressively less accurate. Technical Notes: This particular form of pink noise is superior to that of Britting presented in Richardson and Pugh (1981) because the Gaussian (Normal) distribution of the output does not depend on the Central Limit Theorem. (Dynamo did not have a Gaussian random number generator and hence R&P had to invoke the CLM to get a normal distribution.) Rather, this molecule's normal output is a result of the observations being a sum of Gaussian draws. Hence, the series over short intervals should better approximate normality than the macro in R&P. MEAN: This is the desired mean for the pink noise. STD DEVIATION: This is the desired standard deviation for the pink noise. CORRELATION TIME: This is the smooth time for the noise, or for the more technically minded this is the inverse of the filter's cut-off frequency in radians. Updated by Tom Fiddaman, 2010, to include a random initial value, correct units, and use TIME STEP$ keyword\n    \"\"\"\n    return _integ_pink_noise_structure()\n_integ_pink_noise_structure = Integ(\n    lambda: updating_pink_noise(),\n    lambda: mean()\n    + std_deviation() * stats.truncnorm.rvs(-6, 6, loc=0, scale=1, size=()),\n    \"_integ_pink_noise_structure\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "updating_pink_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def updating_pink_noise():\n    return gap() / correlation_time()\n@component.add(\n    name=\"gap\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"scaled_white_noise\": 1, \"pink_noise_structure\": 1},\n)\ndef gap():",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "gap",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def gap():\n    return scaled_white_noise() - pink_noise_structure()\n@component.add(\n    name=\"scaled white noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"mean\": 1,\n        \"std_deviation\": 1,",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "scaled_white_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def scaled_white_noise():\n    \"\"\"\n    This adjusts the standard deviation of the white noise to compensate for the time step and the correlation time to produce the appropriate pink noise std deviation.\n    \"\"\"\n    return mean() + white_noise() * std_deviation() * np.sqrt(\n        (2 - time_step() / correlation_time()) / (time_step() / correlation_time())\n    )\n@component.add(\n    name=\"white noise\",\n    units=\"dmnl\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "white_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def white_noise():\n    \"\"\"\n    This is an independent, identically distributed random quantity drawn every time step. The distribution is gaussian with mean = 0 and variance = 1. Note that RANDOM NORMAL is truncated +/- 6 standard deviations here. For Vensim 1.62 syntax, remove the arguments to RANDOM NORMAL.\n    \"\"\"\n    return stats.truncnorm.rvs(-6, 6, loc=0, scale=1, size=())\n@component.add(\n    name=\"correlation time\",\n    units=\"week\",\n    limits=(1.0, 100.0),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "correlation_time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def correlation_time():\n    return 10\n@component.add(\n    name=\"mean\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef mean():",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "mean",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def mean():\n    return 10\n@component.add(\n    name=\"seed\",\n    units=\"dmnl\",\n    limits=(1.0, 10000.0, 1.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef seed():",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"std deviation\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef std_deviation():",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "std_deviation",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def std_deviation():\n    return 5\n@component.add(\n    name=\"PINK NOISE macro output\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"_macro_pink_noise_pink_noise_macro_output\": 1},\n    other_deps={\n        \"_macro_pink_noise_pink_noise_macro_output\": {",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "pink_noise_macro_output",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "def pink_noise_macro_output():\n    return _macro_pink_noise_pink_noise_macro_output()\n_macro_pink_noise_pink_noise_macro_output = Macro(\n    _root.joinpath(\"pink_noise.py\"),\n    {\n        \"mean\": lambda: mean(),\n        \"std deviation\": lambda: std_deviation(),\n        \"correlation time\": lambda: correlation_time(),\n        \"seed\": lambda: seed(),\n    },",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 1000,",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 1000,\n    \"time_step\": lambda: 1,",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 1000,\n    \"time_step\": lambda: 1,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 1000,\n    \"time_step\": lambda: 1,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 1000,\n    \"time_step\": lambda: 1,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "_integ_pink_noise_structure",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "_integ_pink_noise_structure = Integ(\n    lambda: updating_pink_noise(),\n    lambda: mean()\n    + std_deviation() * stats.truncnorm.rvs(-6, 6, loc=0, scale=1, size=()),\n    \"_integ_pink_noise_structure\",\n)\n@component.add(\n    name=\"updating pink noise\",\n    units=\"widgets/week/week\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "_macro_pink_noise_pink_noise_macro_output",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise.PinkNoise2010",
        "description": "Vensimmodel.pinknoise.PinkNoise2010",
        "peekOfCode": "_macro_pink_noise_pink_noise_macro_output = Macro(\n    _root.joinpath(\"pink_noise.py\"),\n    {\n        \"mean\": lambda: mean(),\n        \"std deviation\": lambda: std_deviation(),\n        \"correlation time\": lambda: correlation_time(),\n        \"seed\": lambda: seed(),\n    },\n    \"pink_noise\",\n    time_initialization=lambda: __data[\"time\"],",
        "detail": "Vensimmodel.pinknoise.PinkNoise2010",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_quantity_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 3\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_repeat_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_repeat_time():\n    return 3\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"step_height\": 1,\n        \"step_time\": 1,\n        \"time\": 4,",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "input_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def input_1():\n    return (\n        1\n        + step(__data[\"time\"], step_height(), step_time())\n        + (pulse_quantity_1() / time_step())\n        * pulse(__data[\"time\"], pulse_time(), width=pulse_duration())\n        + ramp(__data[\"time\"], ramp_slope(), ramp_start_time(), ramp_end_time())\n        + pulse(\n            __data[\"time\"],\n            pulse_start_time(),",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_duration",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_duration():\n    return 1\n@component.add(\n    name=\"Safety Threshold\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"initial_safety_threshold\": 1, \"input_1\": 1},\n)\ndef safety_threshold():",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def safety_threshold():\n    return initial_safety_threshold() * input_1()\n@component.add(name=\"Ramp End Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "ramp_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "ramp_slope",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 50",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "ramp_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 50\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 1",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "initial_safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def initial_safety_threshold():\n    return 50\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 1\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 10\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "step_height",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def step_height():\n    return 1\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 10\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_quantity",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_quantity():\n    return 10\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"NonSafety Focus\",",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "pulse_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "step_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def step_time():\n    return 0\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus\": {\n            \"initial\": {},",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def nonsafety_focus():\n    return _integ_nonsafety_focus()\n_integ_nonsafety_focus = Integ(\n    lambda: nonsafety_foci_learning_rate() - nonsafety_foci_forgetting_rate(),\n    lambda: 0,\n    \"_integ_nonsafety_focus\",\n)\n@component.add(\n    name=\"NonSafety foci forgetting rate\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "nonsafety_foci_forgetting_rate",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def nonsafety_foci_forgetting_rate():\n    return 1\n@component.add(\n    name=\"NonSafety foci learning rate\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_performance\": 1},\n)\ndef nonsafety_foci_learning_rate():\n    return safety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "nonsafety_foci_learning_rate",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def nonsafety_foci_learning_rate():\n    return safety_performance()\n@component.add(\n    name=\"Time to adjust focus\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef time_to_adjust_focus():\n    return 5",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "time_to_adjust_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def time_to_adjust_focus():\n    return 5\n@component.add(\n    name=\"Acceptable Safety performance\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef acceptable_safety_performance():\n    return 10\n@component.add(\n    name=\"Safety Performance\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "acceptable_safety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def acceptable_safety_performance():\n    return 10\n@component.add(\n    name=\"Safety Performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_focus\": 1, \"acceptable_safety_performance\": 1},\n)\ndef safety_performance():\n    return safety_focus() - acceptable_safety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "safety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def safety_performance():\n    return safety_focus() - acceptable_safety_performance()\n@component.add(\n    name=\"Safety focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},\n    other_deps={\n        \"_integ_safety_focus\": {\n            \"initial\": {},",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def safety_focus():\n    return _integ_safety_focus()\n_integ_safety_focus = Integ(\n    lambda: safety_learning_rate() - safety_forgetting_rate(),\n    lambda: 1,\n    \"_integ_safety_focus\",\n)\n@component.add(\n    name=\"Safety forgetting rate\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "safety_forgetting_rate",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def safety_forgetting_rate():\n    return 1\n@component.add(\n    name=\"Safety Learning rate\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_tolerance\": 1},\n)\ndef safety_learning_rate():\n    return safety_tolerance()",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "safety_learning_rate",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def safety_learning_rate():\n    return safety_tolerance()\n@component.add(\n    name=\"Safety Tolerance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_threshold\": 1, \"nonsafety_focus\": 1, \"time_to_adjust_focus\": 1},\n)\ndef safety_tolerance():\n    return (safety_threshold() - nonsafety_focus()) / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "safety_tolerance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "def safety_tolerance():\n    return (safety_threshold() - nonsafety_focus()) / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 30,",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 30,\n    \"time_step\": lambda: 0.5,",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 30,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 30,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 30,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "_integ_nonsafety_focus = Integ(\n    lambda: nonsafety_foci_learning_rate() - nonsafety_foci_forgetting_rate(),\n    lambda: 0,\n    \"_integ_nonsafety_focus\",\n)\n@component.add(\n    name=\"NonSafety foci forgetting rate\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef nonsafety_foci_forgetting_rate():\n    return 1",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation",
        "description": "Vensimmodel.Organizational_oscillation",
        "peekOfCode": "_integ_safety_focus = Integ(\n    lambda: safety_learning_rate() - safety_forgetting_rate(),\n    lambda: 1,\n    \"_integ_safety_focus\",\n)\n@component.add(\n    name=\"Safety forgetting rate\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef safety_forgetting_rate():\n    return 1",
        "detail": "Vensimmodel.Organizational_oscillation",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name='\"Safety Performance.\"',",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_performance():\n    return safety_focus()\n@component.add(\n    name=\"Additional Serious Errors\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"serious_errors\": 1, \"safety_threshold\": 1, \"time_to_adjust\": 1},\n)\ndef additional_serious_errors():\n    return (serious_errors() - safety_threshold()) / time_to_adjust()",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "additional_serious_errors",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def additional_serious_errors():\n    return (serious_errors() - safety_threshold()) / time_to_adjust()\n@component.add(\n    name=\"Change in Non Safety Focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"effect_of_safety_performance_on_change_in_nonsafety_focus\": 1,\n        \"time_to_adjust_focus\": 1,\n    },",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "change_in_non_safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def change_in_non_safety_focus():\n    return (\n        effect_of_safety_performance_on_change_in_nonsafety_focus()\n        / time_to_adjust_focus()\n    )\n@component.add(\n    name='\"Change in Non-Safety Focus.\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"additional_serious_errors\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "change_in_nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def change_in_nonsafety_focus():\n    return -additional_serious_errors()\n@component.add(\n    name=\"Change in Safety Focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_tolerance\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_safety_focus():\n    return safety_tolerance() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "change_in_safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def change_in_safety_focus():\n    return safety_tolerance() / time_to_adjust_focus()\n@component.add(\n    name='\"Change in Safety Focus.\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"additional_serious_errors\": 1},\n)\ndef change_in_safety_focus_1():\n    return additional_serious_errors()",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "change_in_safety_focus_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def change_in_safety_focus_1():\n    return additional_serious_errors()\n@component.add(\n    name=\"Change in serious errors\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_performance\": 1},\n)\ndef change_in_serious_errors():\n    return safety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "change_in_serious_errors",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def change_in_serious_errors():\n    return safety_performance()\n@component.add(\n    name=\"Effect of Safety Performance on change in nonsafety focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_performance_1\": 1},\n)\ndef effect_of_safety_performance_on_change_in_nonsafety_focus():\n    return safety_performance_1() / 15",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "effect_of_safety_performance_on_change_in_nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def effect_of_safety_performance_on_change_in_nonsafety_focus():\n    return safety_performance_1() / 15\n@component.add(name='\"Time to Adjust.\"', comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef time_to_adjust():\n    return 5\n@component.add(\n    name='\"NonSafety Focus.\"',\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "time_to_adjust",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def time_to_adjust():\n    return 5\n@component.add(\n    name='\"NonSafety Focus.\"',\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus\": {\n            \"initial\": {},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def nonsafety_focus():\n    return _integ_nonsafety_focus()\n_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 0, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus_1\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def nonsafety_focus_1():\n    return _integ_nonsafety_focus_1()\n_integ_nonsafety_focus_1 = Integ(\n    lambda: change_in_non_safety_focus(), lambda: 0, \"_integ_nonsafety_focus_1\"\n)\n@component.add(\n    name='\"Safety Focus.\"',\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_focus():\n    return _integ_safety_focus()\n_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus_1(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"Serious Errors\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_serious_errors\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "serious_errors",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def serious_errors():\n    return _integ_serious_errors()\n_integ_serious_errors = Integ(\n    lambda: change_in_serious_errors(), lambda: 0, \"_integ_serious_errors\"\n)\n@component.add(name='\"Safety Threshold.\"', comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef safety_threshold():\n    return 10\n@component.add(\n    name=\"Safety focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_threshold():\n    return 10\n@component.add(\n    name=\"Safety focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus_1\": 1},\n    other_deps={\n        \"_integ_safety_focus_1\": {\"initial\": {}, \"step\": {\"change_in_safety_focus\": 1}}\n    },",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_focus_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_focus_1():\n    return _integ_safety_focus_1()\n_integ_safety_focus_1 = Integ(\n    lambda: change_in_safety_focus(), lambda: 1, \"_integ_safety_focus_1\"\n)\n@component.add(\n    name=\"Safety Tolerance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_threshold_1\": 1, \"nonsafety_focus_1\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_tolerance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_tolerance():\n    return safety_threshold_1() - nonsafety_focus_1()\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():\n    return 50\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_quantity_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_quantity_1():\n    return 50\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_repeat_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"step_height\": 1,\n        \"step_time\": 1,\n        \"time\": 4,",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "input_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def input_1():\n    return (\n        1\n        + step(__data[\"time\"], step_height(), step_time())\n        + (pulse_quantity_1() / time_step())\n        * pulse(__data[\"time\"], pulse_time(), width=pulse_duration())\n        + ramp(__data[\"time\"], ramp_slope(), ramp_start_time(), ramp_end_time())\n        + pulse(\n            __data[\"time\"],\n            pulse_start_time(),",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_duration",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_duration():\n    return 1\n@component.add(\n    name=\"Safety Threshold\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"initial_safety_threshold\": 1, \"input_1\": 1},\n)\ndef safety_threshold_1():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_threshold_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_threshold_1():\n    return initial_safety_threshold() + input_1()\n@component.add(name=\"Ramp End Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "ramp_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "ramp_slope",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "ramp_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 1",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "initial_safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 1\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "step_height",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def step_height():\n    return 1\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_quantity",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "pulse_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "step_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef time_to_adjust_focus():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "time_to_adjust_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def time_to_adjust_focus():\n    return 2\n@component.add(\n    name=\"Acceptable Safety performance\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef acceptable_safety_performance():\n    return 0\n@component.add(\n    name=\"Safety Performance\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "acceptable_safety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def acceptable_safety_performance():\n    return 0\n@component.add(\n    name=\"Safety Performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_focus_1\": 1, \"acceptable_safety_performance\": 1},\n)\ndef safety_performance_1():\n    return safety_focus_1() - acceptable_safety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "safety_performance_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "def safety_performance_1():\n    return safety_focus_1() - acceptable_safety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 0, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus_1\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus_1\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus_1",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_integ_nonsafety_focus_1 = Integ(\n    lambda: change_in_non_safety_focus(), lambda: 0, \"_integ_nonsafety_focus_1\"\n)\n@component.add(\n    name='\"Safety Focus.\"',\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},\n    other_deps={\n        \"_integ_safety_focus\": {\"initial\": {}, \"step\": {\"change_in_safety_focus_1\": 1}}",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus_1(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"Serious Errors\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_serious_errors\": 1},\n    other_deps={\n        \"_integ_serious_errors\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_integ_serious_errors",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_integ_serious_errors = Integ(\n    lambda: change_in_serious_errors(), lambda: 0, \"_integ_serious_errors\"\n)\n@component.add(name='\"Safety Threshold.\"', comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef safety_threshold():\n    return 10\n@component.add(\n    name=\"Safety focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus_1",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v2",
        "description": "Vensimmodel.Organizational_oscillation_v2",
        "peekOfCode": "_integ_safety_focus_1 = Integ(\n    lambda: change_in_safety_focus(), lambda: 1, \"_integ_safety_focus_1\"\n)\n@component.add(\n    name=\"Safety Tolerance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_threshold_1\": 1, \"nonsafety_focus_1\": 1},\n)\ndef safety_tolerance():",
        "detail": "Vensimmodel.Organizational_oscillation_v2",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"Change in Safety Focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "change_in_safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def change_in_safety_focus():\n    return effect_of_nonsafety_performance_on_chge_sf() / time_to_adjust_focus()\n@component.add(\n    name='\"Change in Non-Safety Focus\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"safety_performance_gap\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_nonsafety_focus():\n    return safety_performance_gap() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "change_in_nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def change_in_nonsafety_focus():\n    return safety_performance_gap() / time_to_adjust_focus()\n@component.add(\n    name='\"Effect of Non-Safety Performance on Chge SF\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"nonsafety_performance\": 1},\n)\ndef effect_of_nonsafety_performance_on_chge_sf():\n    return nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "effect_of_nonsafety_performance_on_chge_sf",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def effect_of_nonsafety_performance_on_chge_sf():\n    return nonsafety_performance()\n@component.add(\n    name=\"Safety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},\n    other_deps={\n        \"_integ_safety_focus\": {\"initial\": {}, \"step\": {\"change_in_safety_focus\": 1}}\n    },",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def safety_focus():\n    return _integ_safety_focus()\n_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name='\"Non-Safety focus\"',\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def nonsafety_focus():\n    return _integ_nonsafety_focus()\n_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"Safety Performance Gap\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"serious_errors\": 1, \"safety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "safety_performance_gap",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def safety_performance_gap():\n    return serious_errors() - safety_focus()\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_quantity_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_repeat_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"step_height\": 1,\n        \"step_time\": 1,\n        \"time\": 4,",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "input_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def input_1():\n    return (\n        step(__data[\"time\"], step_height(), step_time())\n        + (pulse_quantity_1() / time_step())\n        * pulse(__data[\"time\"], pulse_time(), width=pulse_duration())\n        + ramp(__data[\"time\"], ramp_slope(), ramp_start_time(), ramp_end_time())\n        + pulse(\n            __data[\"time\"],\n            pulse_start_time(),\n            repeat_time=pulse_repeat_time(),",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_duration",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_duration():\n    return 0\n@component.add(\n    name=\"Serious Errors\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"initial_safety_threshold\": 1, \"input_1\": 1},\n)\ndef serious_errors():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "serious_errors",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def serious_errors():\n    return initial_safety_threshold() + input_1()\n@component.add(name=\"Ramp End Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "ramp_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "ramp_slope",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "ramp_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "initial_safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "step_height",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_quantity",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "pulse_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "step_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef time_to_adjust_focus():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "time_to_adjust_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def time_to_adjust_focus():\n    return 2\n@component.add(\n    name=\"Normal NonSafety performance\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef normal_nonsafety_performance():\n    return 0\n@component.add(\n    name='\"Non-Safety Performance\"',\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "normal_nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def normal_nonsafety_performance():\n    return 0\n@component.add(\n    name='\"Non-Safety Performance\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"nonsafety_focus\": 1, \"normal_nonsafety_performance\": 1},\n)\ndef nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "def nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name='\"Non-Safety focus\"',\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v3",
        "description": "Vensimmodel.Organizational_oscillation_v3",
        "peekOfCode": "_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"Safety Performance Gap\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"serious_errors\": 1, \"safety_focus\": 1},\n)\ndef safety_performance_gap():",
        "detail": "Vensimmodel.Organizational_oscillation_v3",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"Acceptable Safety Boundary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "acceptable_safety_boundary",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def acceptable_safety_boundary():\n    return 0\n@component.add(\n    name=\"Accident\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"pink_noise_macro_output\": 1},\n)\ndef accident():\n    return pink_noise_macro_output()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "accident",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def accident():\n    return pink_noise_macro_output()\n@component.add(\n    name=\"PINK NOISE macro output\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"pink_noise_structure\": 1},\n)\ndef pink_noise_macro_output():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pink_noise_macro_output",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pink_noise_macro_output():\n    return pink_noise_structure()\n@component.add(\n    name=\"PINK NOISE structure\",\n    units=\"widgets/week\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_pink_noise_structure\": 1},\n    other_deps={\n        \"_integ_pink_noise_structure\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pink_noise_structure",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pink_noise_structure():\n    \"\"\"\n    Contributed by Ed Anderson, MIT/U. Texas - Austin Description: The pink noise molecule described generates a simple random series with autocorrelation. This is useful in representing time series, like rainfall from day to day, in which today's value has some correlation with what happened yesterday. This particular formulation will also have properties such as standard deviation and mean that are insensitive both to the time step and the correlation (smoothing) time. Finally, the output as a whole and the difference in values between any two days is guaranteed to be Gaussian (normal) in distribution. Behavior: Pink noise series will have both a historical and a random component during each period. The relative \"trend-to-noise\" ratio is controlled by the length of the correlation time. As the correlation time approaches zero, the pink noise output will become more independent of its historical value and more \"noisy.\" On the other hand, as the correlation time approaches infinity, the pink noise output will approximate a continuous time random walk or Brownian motion. Displayed above are two time series with correlation times of 1 and 8 months. While both series have approximately the same standard deviation, the 1-month correlation time series is less smooth from period to period than the 8-month series, which is characterized by \"sustained\" swings in a given direction. Note that this behavior will be independent of the time-step. The \"pink\" in pink noise refers to the power spectrum of the output. A time series in which each period's observation is independent of the past is characterized by a flat or \"white\" power spectrum. Smoothing a time series attenuates the higher or \"bluer\" frequencies of the power spectrum, leaving the lower or \"redder\" frequencies relatively stronger in the output. Caveats: This assumes the use of Euler integration with a time step of no more than 1/4 of the correlation time. Very long correlation times should be avoided also as the multiplication in the scaled white noise will become progressively less accurate. Technical Notes: This particular form of pink noise is superior to that of Britting presented in Richardson and Pugh (1981) because the Gaussian (Normal) distribution of the output does not depend on the Central Limit Theorem. (Dynamo did not have a Gaussian random number generator and hence R&P had to invoke the CLM to get a normal distribution.) Rather, this molecule's normal output is a result of the observations being a sum of Gaussian draws. Hence, the series over short intervals should better approximate normality than the macro in R&P. MEAN: This is the desired mean for the pink noise. STD DEVIATION: This is the desired standard deviation for the pink noise. CORRELATION TIME: This is the smooth time for the noise, or for the more technically minded this is the inverse of the filter's cut-off frequency in radians. Updated by Tom Fiddaman, 2010, to include a random initial value, correct units, and use TIME STEP$ keyword\n    \"\"\"\n    return _integ_pink_noise_structure()\n_integ_pink_noise_structure = Integ(\n    lambda: updating_pink_noise(), lambda: 0, \"_integ_pink_noise_structure\"\n)\n@component.add(\n    name=\"scaled white noise\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "scaled_white_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def scaled_white_noise():\n    \"\"\"\n    This adjusts the standard deviation of the white noise to compensate for the time step and the correlation time to produce the appropriate pink noise std deviation.\n    \"\"\"\n    return mean() + white_noise() * std_deviation() * np.sqrt(\n        (2 - time_step() / correlation_time()) / (time_step() / correlation_time())\n    )\n@component.add(\n    name=\"seed\",\n    units=\"dmnl\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"correlation time\",\n    units=\"week\",\n    limits=(1.0, 100.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef correlation_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "correlation_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def correlation_time():\n    return 10\n@component.add(\n    name=\"Pressure to focus on Safety\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"nonsafety_performance\": 1, \"accident\": 1},\n)\ndef pressure_to_focus_on_safety():\n    return nonsafety_performance() + accident()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pressure_to_focus_on_safety",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pressure_to_focus_on_safety():\n    return nonsafety_performance() + accident()\n@component.add(\n    name=\"gap\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"scaled_white_noise\": 1, \"pink_noise_structure\": 1},\n)\ndef gap():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "gap",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def gap():\n    return scaled_white_noise() - pink_noise_structure()\n@component.add(\n    name=\"mean\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef mean():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "mean",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def mean():\n    return 0\n@component.add(\n    name=\"white noise\",\n    units=\"dmnl\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"seed\": 1},\n)\ndef white_noise():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "white_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def white_noise():\n    \"\"\"\n    This is an independent, identically distributed random quantity drawn every time step. The distribution is gaussian with mean = 0 and variance = 1. Note that RANDOM NORMAL is truncated +/- 6 standard deviations here. For Vensim 1.62 syntax, remove the arguments to RANDOM NORMAL.\n    \"\"\"\n    return stats.truncnorm.rvs(-6, 6, loc=0, scale=1, size=(), random_state= 8)\n@component.add(\n    name=\"updating pink noise\",\n    units=\"widgets/week/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "updating_pink_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def updating_pink_noise():\n    return gap() / correlation_time()\n@component.add(\n    name=\"std deviation\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef std_deviation():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "std_deviation",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def std_deviation():\n    return 10\n@component.add(\n    name=\"Change in Safety Focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"pressure_to_focus_on_safety\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_safety_focus():\n    return pressure_to_focus_on_safety() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "change_in_safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def change_in_safety_focus():\n    return pressure_to_focus_on_safety() / time_to_adjust_focus()\n@component.add(\n    name='\"Change in Non-Safety Focus\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"error_margin\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_nonsafety_focus():\n    return error_margin() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "change_in_nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def change_in_nonsafety_focus():\n    return error_margin() / time_to_adjust_focus()\n@component.add(\n    name=\"Safety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},\n    other_deps={\n        \"_integ_safety_focus\": {\"initial\": {}, \"step\": {\"change_in_safety_focus\": 1}}\n    },",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def safety_focus():\n    return _integ_safety_focus()\n_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def nonsafety_focus():\n    return _integ_nonsafety_focus()\n_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"Error Margin\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"acceptable_safety_boundary\": 1, \"safety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "error_margin",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def error_margin():\n    return acceptable_safety_boundary() - safety_focus()\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_quantity_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_repeat_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"step_height\": 1,\n        \"step_time\": 1,\n        \"time\": 4,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "input_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def input_1():\n    return (\n        step(__data[\"time\"], step_height(), step_time())\n        + (pulse_quantity_1() / time_step())\n        * pulse(__data[\"time\"], pulse_time(), width=pulse_duration())\n        + ramp(__data[\"time\"], ramp_slope(), ramp_start_time(), ramp_end_time())\n        + pulse(\n            __data[\"time\"],\n            pulse_start_time(),\n            repeat_time=pulse_repeat_time(),",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_duration",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_duration():\n    return 0\n@component.add(name=\"Ramp End Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "ramp_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "ramp_slope",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "ramp_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "initial_safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "step_height",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_quantity",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "pulse_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "step_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef time_to_adjust_focus():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "time_to_adjust_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def time_to_adjust_focus():\n    return 2\n@component.add(\n    name=\"Normal NonSafety performance\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef normal_nonsafety_performance():\n    return 0\n@component.add(\n    name=\"NonSafety Performance\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "normal_nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def normal_nonsafety_performance():\n    return 0\n@component.add(\n    name=\"NonSafety Performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"nonsafety_focus\": 1, \"normal_nonsafety_performance\": 1},\n)\ndef nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "def nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "_integ_pink_noise_structure",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "_integ_pink_noise_structure = Integ(\n    lambda: updating_pink_noise(), lambda: 0, \"_integ_pink_noise_structure\"\n)\n@component.add(\n    name=\"scaled white noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"mean\": 1,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.2",
        "description": "Vensimmodel.Organizational_oscillation_v4.2",
        "peekOfCode": "_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"Error Margin\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"acceptable_safety_boundary\": 1, \"safety_focus\": 1},\n)\ndef error_margin():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.2",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"Serious Errors\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "serious_errors",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def serious_errors():\n    return input_1() + initial_safety_threshold()\n@component.add(\n    name=\"Switch\", limits=(0.0, 1.0, 1.0), comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef switch():\n    return 0\n@component.add(\n    name=\"Pressure to focus on Safety\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "switch",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def switch():\n    return 0\n@component.add(\n    name=\"Pressure to focus on Safety\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"nonsafety_performance\": 1,\n        \"accident\": 1,\n        \"switch\": 1,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pressure_to_focus_on_safety",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pressure_to_focus_on_safety():\n    return nonsafety_performance() + if_then_else(\n        switch() == 0, lambda: serious_errors(), lambda: accident()\n    )\n@component.add(\n    name=\"updating pink noise\",\n    units=\"widgets/week/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"white_noise\": 1, \"auto_noise\": 1, \"correlation_time\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "updating_pink_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def updating_pink_noise():\n    return (white_noise() - auto_noise()) / correlation_time()\n@component.add(\n    name=\"Acceptable Safety Boundary\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef acceptable_safety_boundary():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "acceptable_safety_boundary",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def acceptable_safety_boundary():\n    return 0\n@component.add(\n    name=\"Accident\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"pink_noise\": 1},\n)\ndef accident():\n    return pink_noise()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "accident",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def accident():\n    return pink_noise()\n@component.add(\n    name=\"pink noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"auto_noise\": 1},\n)\ndef pink_noise():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pink_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pink_noise():\n    return auto_noise()\n@component.add(\n    name=\"auto noise\",\n    units=\"widgets/week\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_auto_noise\": 1},\n    other_deps={\n        \"_integ_auto_noise\": {\"initial\": {}, \"step\": {\"updating_pink_noise\": 1}}",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "auto_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def auto_noise():\n    \"\"\"\n    Contributed by Ed Anderson, MIT/U. Texas - Austin Description: The pink noise molecule described generates a simple random series with autocorrelation. This is useful in representing time series, like rainfall from day to day, in which today's value has some correlation with what happened yesterday. This particular formulation will also have properties such as standard deviation and mean that are insensitive both to the time step and the correlation (smoothing) time. Finally, the output as a whole and the difference in values between any two days is guaranteed to be Gaussian (normal) in distribution. Behavior: Pink noise series will have both a historical and a random component during each period. The relative \"trend-to-noise\" ratio is controlled by the length of the correlation time. As the correlation time approaches zero, the pink noise output will become more independent of its historical value and more \"noisy.\" On the other hand, as the correlation time approaches infinity, the pink noise output will approximate a continuous time random walk or Brownian motion. Displayed above are two time series with correlation times of 1 and 8 months. While both series have approximately the same standard deviation, the 1-month correlation time series is less smooth from period to period than the 8-month series, which is characterized by \"sustained\" swings in a given direction. Note that this behavior will be independent of the time-step. The \"pink\" in pink noise refers to the power spectrum of the output. A time series in which each period's observation is independent of the past is characterized by a flat or \"white\" power spectrum. Smoothing a time series attenuates the higher or \"bluer\" frequencies of the power spectrum, leaving the lower or \"redder\" frequencies relatively stronger in the output. Caveats: This assumes the use of Euler integration with a time step of no more than 1/4 of the correlation time. Very long correlation times should be avoided also as the multiplication in the scaled white noise will become progressively less accurate. Technical Notes: This particular form of pink noise is superior to that of Britting presented in Richardson and Pugh (1981) because the Gaussian (Normal) distribution of the output does not depend on the Central Limit Theorem. (Dynamo did not have a Gaussian random number generator and hence R&P had to invoke the CLM to get a normal distribution.) Rather, this molecule's normal output is a result of the observations being a sum of Gaussian draws. Hence, the series over short intervals should better approximate normality than the macro in R&P. MEAN: This is the desired mean for the pink noise. STD DEVIATION: This is the desired standard deviation for the pink noise. CORRELATION TIME: This is the smooth time for the noise, or for the more technically minded this is the inverse of the filter's cut-off frequency in radians. Updated by Tom Fiddaman, 2010, to include a random initial value, correct units, and use TIME STEP$ keyword\n    \"\"\"\n    return _integ_auto_noise()\n_integ_auto_noise = Integ(lambda: updating_pink_noise(), lambda: 0, \"_integ_auto_noise\")\n@component.add(\n    name=\"white noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "white_noise",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def white_noise():\n    \"\"\"\n    This adjusts the standard deviation of the white noise to compensate for the time step and the correlation time to produce the appropriate pink noise std deviation.\n    \"\"\"\n    return mean() + std_deviation() * (\n        24 * correlation_time() / time_step()\n    ) ** 0.5 * np.random.uniform(-0.5, 0.5, size=())\n@component.add(\n    name=\"seed\",\n    units=\"dmnl\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"correlation time\",\n    units=\"week\",\n    limits=(1.0, 100.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef correlation_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "correlation_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def correlation_time():\n    return 10\n@component.add(\n    name=\"mean\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef mean():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "mean",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def mean():\n    return 0\n@component.add(\n    name=\"std deviation\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef std_deviation():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "std_deviation",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def std_deviation():\n    return 10\n@component.add(\n    name=\"Change in Safety Focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"pressure_to_focus_on_safety\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_safety_focus():\n    return pressure_to_focus_on_safety() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "change_in_safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def change_in_safety_focus():\n    return pressure_to_focus_on_safety() / time_to_adjust_focus()\n@component.add(\n    name='\"Change in Non-Safety Focus\"',\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"error_margin\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_nonsafety_focus():\n    return error_margin() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "change_in_nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def change_in_nonsafety_focus():\n    return error_margin() / time_to_adjust_focus()\n@component.add(\n    name=\"Safety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},\n    other_deps={\n        \"_integ_safety_focus\": {\"initial\": {}, \"step\": {\"change_in_safety_focus\": 1}}\n    },",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def safety_focus():\n    return _integ_safety_focus()\n_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def nonsafety_focus():\n    return _integ_nonsafety_focus()\n_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"Error Margin\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"acceptable_safety_boundary\": 1, \"safety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "error_margin",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def error_margin():\n    return acceptable_safety_boundary() - safety_focus()\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_quantity_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_quantity_1():\n    return 0\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_repeat_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_start_time():\n    return 1\n@component.add(\n    name=\"input\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"step_height\": 1,\n        \"step_time\": 1,\n        \"time\": 4,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "input_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def input_1():\n    return (\n        step(__data[\"time\"], step_height(), step_time())\n        + (pulse_quantity_1() / time_step())\n        * pulse(__data[\"time\"], pulse_time(), width=pulse_duration())\n        + ramp(__data[\"time\"], ramp_slope(), ramp_start_time(), ramp_end_time())\n        + pulse(\n            __data[\"time\"],\n            pulse_start_time(),\n            repeat_time=pulse_repeat_time(),",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_duration",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_duration():\n    return 0\n@component.add(name=\"Ramp End Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "ramp_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "ramp_slope",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "ramp_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def ramp_start_time():\n    return 0\n@component.add(\n    name=\"initial Safety Threshold\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "initial_safety_threshold",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def initial_safety_threshold():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "step_height",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_quantity",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_quantity():\n    return 0\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "pulse_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def pulse_time():\n    return 0\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "step_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef time_to_adjust_focus():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "time_to_adjust_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def time_to_adjust_focus():\n    return 2\n@component.add(\n    name=\"Normal NonSafety performance\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef normal_nonsafety_performance():\n    return 0\n@component.add(\n    name=\"NonSafety Performance\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "normal_nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def normal_nonsafety_performance():\n    return 0\n@component.add(\n    name=\"NonSafety Performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"nonsafety_focus\": 1, \"normal_nonsafety_performance\": 1},\n)\ndef nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "def nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "__pysd_version__ = \"3.9.1\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "_integ_auto_noise",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "_integ_auto_noise = Integ(lambda: updating_pink_noise(), lambda: 0, \"_integ_auto_noise\")\n@component.add(\n    name=\"white noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"mean\": 1,\n        \"time\": 1,\n        \"time_step\": 1,",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4.3",
        "description": "Vensimmodel.Organizational_oscillation_v4.3",
        "peekOfCode": "_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(\n    name=\"Error Margin\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"acceptable_safety_boundary\": 1, \"safety_focus\": 1},\n)\ndef error_margin():",
        "detail": "Vensimmodel.Organizational_oscillation_v4.3",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"Acceptable Safety Performance\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "acceptable_safety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def acceptable_safety_performance():\n    return 5\n@component.add(\n    name=\"Accident\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"time\": 1},\n)\ndef accident():\n    return pulse(__data[\"time\"], 5, repeat_time=3, width=1, end=20) * 5",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "accident",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def accident():\n    return pulse(__data[\"time\"], 5, repeat_time=3, width=1, end=20) * 5\n@component.add(\n    name=\"Error Margin\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"acceptable_safety_performance\": 1, \"safety_focus\": 1},\n)\ndef error_margin():\n    return acceptable_safety_performance() - safety_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "error_margin",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def error_margin():\n    return acceptable_safety_performance() - safety_focus()\n@component.add(\n    name=\"Serious Error\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"constant\": 1, \"function\": 1},\n)\ndef serious_error():\n    return constant() + function()",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "serious_error",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def serious_error():\n    return constant() + function()\n@component.add(\n    name=\"Pressure to focus on Safety\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"nonsafety_performance\": 1,\n        \"switch\": 1,\n        \"serious_error\": 1,",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pressure_to_focus_on_safety",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pressure_to_focus_on_safety():\n    return nonsafety_performance() + if_then_else(\n        switch() == 0, lambda: serious_error(), lambda: accident()\n    )\n@component.add(\n    name=\"SWITCH\", limits=(0.0, 1.0, 1.0), comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef switch():\n    return 1\n@component.add(",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "switch",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def switch():\n    return 1\n@component.add(\n    name=\"Change in Safety Focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"pressure_to_focus_on_safety\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_safety_focus():\n    return pressure_to_focus_on_safety() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "change_in_safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def change_in_safety_focus():\n    return pressure_to_focus_on_safety() / time_to_adjust_focus()\n@component.add(\n    name=\"Change in NonSafety Focus\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"error_margin\": 1, \"time_to_adjust_focus\": 1},\n)\ndef change_in_nonsafety_focus():\n    return error_margin() / time_to_adjust_focus()",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "change_in_nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def change_in_nonsafety_focus():\n    return error_margin() / time_to_adjust_focus()\n@component.add(\n    name=\"Safety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_safety_focus\": 1},\n    other_deps={\n        \"_integ_safety_focus\": {\"initial\": {}, \"step\": {\"change_in_safety_focus\": 1}}\n    },",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "safety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def safety_focus():\n    return _integ_safety_focus()\n_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "nonsafety_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def nonsafety_focus():\n    return _integ_nonsafety_focus()\n_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():\n    return 1\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_quantity_1",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_quantity_1():\n    return 1\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_repeat_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"function\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_end_time():\n    return 25\n@component.add(name=\"Pulse start time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_start_time():\n    return 1\n@component.add(\n    name=\"function\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_start_time():\n    return 1\n@component.add(\n    name=\"function\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"step_height\": 1,\n        \"step_time\": 1,\n        \"time\": 4,",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "function",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def function():\n    return (\n        step(__data[\"time\"], step_height(), step_time())\n        + (pulse_quantity_1() / time_step())\n        * pulse(__data[\"time\"], pulse_time(), width=pulse_duration())\n        + ramp(__data[\"time\"], ramp_slope(), ramp_start_time(), ramp_end_time())\n        + pulse(\n            __data[\"time\"],\n            pulse_start_time(),\n            repeat_time=pulse_repeat_time(),",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_duration",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_duration():\n    return 1\n@component.add(name=\"Ramp End Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "ramp_end_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def ramp_end_time():\n    return 0\n@component.add(name=\"Ramp Slope\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(name=\"Constant\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef constant():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "ramp_slope",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def ramp_slope():\n    return 0\n@component.add(name=\"Ramp Start Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef ramp_start_time():\n    return 0\n@component.add(name=\"Constant\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef constant():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "ramp_start_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def ramp_start_time():\n    return 0\n@component.add(name=\"Constant\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef constant():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "constant",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def constant():\n    return 0\n@component.add(name=\"Step Height\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 1\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "step_height",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def step_height():\n    return 0\n@component.add(name=\"Pulse Quantity\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity():\n    return 1\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 5\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_quantity",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_quantity():\n    return 1\n@component.add(name=\"Pulse Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_time():\n    return 5\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "pulse_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def pulse_time():\n    return 5\n@component.add(name=\"Step Time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "step_time",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def step_time():\n    return 0\n@component.add(\n    name=\"Time to adjust focus\",\n    units=\"Month\",\n    limits=(0.0, 20.0, 2.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef time_to_adjust_focus():",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "time_to_adjust_focus",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def time_to_adjust_focus():\n    return 5\n@component.add(\n    name=\"Normal NonSafety performance\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef normal_nonsafety_performance():\n    \"\"\"\n    PULSE( 5 , 1 )\n    \"\"\"\n    return 0",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "normal_nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def normal_nonsafety_performance():\n    \"\"\"\n    PULSE( 5 , 1 )\n    \"\"\"\n    return 0\n@component.add(\n    name=\"NonSafety Performance\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"nonsafety_focus\": 1, \"normal_nonsafety_performance\": 1},",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "nonsafety_performance",
        "kind": 2,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "def nonsafety_performance():\n    return nonsafety_focus() - normal_nonsafety_performance()",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "__pysd_version__ = \"3.9.0\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.5,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "_integ_safety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "_integ_safety_focus = Integ(\n    lambda: change_in_safety_focus(), lambda: 0, \"_integ_safety_focus\"\n)\n@component.add(\n    name=\"NonSafety Focus\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_nonsafety_focus\": 1},\n    other_deps={\n        \"_integ_nonsafety_focus\": {",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "_integ_nonsafety_focus",
        "kind": 5,
        "importPath": "Vensimmodel.Organizational_oscillation_v4",
        "description": "Vensimmodel.Organizational_oscillation_v4",
        "peekOfCode": "_integ_nonsafety_focus = Integ(\n    lambda: change_in_nonsafety_focus(), lambda: 1, \"_integ_nonsafety_focus\"\n)\n@component.add(name=\"Pulse Quantity 1\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_quantity_1():\n    return 1\n@component.add(name=\"Pulse repeat time\", comp_type=\"Constant\", comp_subtype=\"Normal\")\ndef pulse_repeat_time():\n    return 0\n@component.add(name=\"Pulse end time\", comp_type=\"Constant\", comp_subtype=\"Normal\")",
        "detail": "Vensimmodel.Organizational_oscillation_v4",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def time():\n    \"\"\"\n    Current time of the model.\n    \"\"\"\n    return __data[\"time\"]()\n@component.add(\n    name=\"FINAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef final_time():\n    \"\"\"",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "final_time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def final_time():\n    \"\"\"\n    The final time for the simulation.\n    \"\"\"\n    return __data[\"time\"].final_time()\n@component.add(\n    name=\"INITIAL TIME\", units=\"Year\", comp_type=\"Constant\", comp_subtype=\"Normal\"\n)\ndef initial_time():\n    \"\"\"",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "initial_time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def initial_time():\n    \"\"\"\n    The initial time for the simulation.\n    \"\"\"\n    return __data[\"time\"].initial_time()\n@component.add(\n    name=\"SAVEPER\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "saveper",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def saveper():\n    \"\"\"\n    The frequency with which output is stored.\n    \"\"\"\n    return __data[\"time\"].saveper()\n@component.add(\n    name=\"TIME STEP\",\n    units=\"Year\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "time_step",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def time_step():\n    \"\"\"\n    The time step for the simulation.\n    \"\"\"\n    return __data[\"time\"].time_step()\n#######################################################################\n#                           MODEL VARIABLES                           #\n#######################################################################\n@component.add(\n    name=\"updating pink noise\",",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "updating_pink_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def updating_pink_noise():\n    return (white_noise() - auto_noise()) / correlation_time()\n@component.add(\n    name=\"pink noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\"auto_noise\": 1},\n)\ndef pink_noise():",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "pink_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def pink_noise():\n    return auto_noise()\n@component.add(\n    name=\"auto noise\",\n    units=\"widgets/week\",\n    comp_type=\"Stateful\",\n    comp_subtype=\"Integ\",\n    depends_on={\"_integ_auto_noise\": 1},\n    other_deps={\n        \"_integ_auto_noise\": {\"initial\": {}, \"step\": {\"updating_pink_noise\": 1}}",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "auto_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def auto_noise():\n    \"\"\"\n    Contributed by Ed Anderson, MIT/U. Texas - Austin Description: The pink noise molecule described generates a simple random series with autocorrelation. This is useful in representing time series, like rainfall from day to day, in which today's value has some correlation with what happened yesterday. This particular formulation will also have properties such as standard deviation and mean that are insensitive both to the time step and the correlation (smoothing) time. Finally, the output as a whole and the difference in values between any two days is guaranteed to be Gaussian (normal) in distribution. Behavior: Pink noise series will have both a historical and a random component during each period. The relative \"trend-to-noise\" ratio is controlled by the length of the correlation time. As the correlation time approaches zero, the pink noise output will become more independent of its historical value and more \"noisy.\" On the other hand, as the correlation time approaches infinity, the pink noise output will approximate a continuous time random walk or Brownian motion. Displayed above are two time series with correlation times of 1 and 8 months. While both series have approximately the same standard deviation, the 1-month correlation time series is less smooth from period to period than the 8-month series, which is characterized by \"sustained\" swings in a given direction. Note that this behavior will be independent of the time-step. The \"pink\" in pink noise refers to the power spectrum of the output. A time series in which each period's observation is independent of the past is characterized by a flat or \"white\" power spectrum. Smoothing a time series attenuates the higher or \"bluer\" frequencies of the power spectrum, leaving the lower or \"redder\" frequencies relatively stronger in the output. Caveats: This assumes the use of Euler integration with a time step of no more than 1/4 of the correlation time. Very long correlation times should be avoided also as the multiplication in the scaled white noise will become progressively less accurate. Technical Notes: This particular form of pink noise is superior to that of Britting presented in Richardson and Pugh (1981) because the Gaussian (Normal) distribution of the output does not depend on the Central Limit Theorem. (Dynamo did not have a Gaussian random number generator and hence R&P had to invoke the CLM to get a normal distribution.) Rather, this molecule's normal output is a result of the observations being a sum of Gaussian draws. Hence, the series over short intervals should better approximate normality than the macro in R&P. MEAN: This is the desired mean for the pink noise. STD DEVIATION: This is the desired standard deviation for the pink noise. CORRELATION TIME: This is the smooth time for the noise, or for the more technically minded this is the inverse of the filter's cut-off frequency in radians. Updated by Tom Fiddaman, 2010, to include a random initial value, correct units, and use TIME STEP$ keyword\n    \"\"\"\n    return _integ_auto_noise()\n_integ_auto_noise = Integ(lambda: updating_pink_noise(), lambda: 0, \"_integ_auto_noise\")\n@component.add(\n    name=\"white noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "white_noise",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def white_noise():\n    \"\"\"\n    This adjusts the standard deviation of the white noise to compensate for the time step and the correlation time to produce the appropriate pink noise std deviation.\n    \"\"\"\n    return mean() + std_deviation() * (\n        24 * correlation_time() / time_step()\n    ) ** 0.5 * np.random.uniform(-0.5, 0.5, size=())\n@component.add(\n    name=\"seed\",\n    units=\"dmnl\",",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "seed",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def seed():\n    return 1\n@component.add(\n    name=\"correlation time\",\n    units=\"week\",\n    limits=(1.0, 100.0),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef correlation_time():",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "correlation_time",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def correlation_time():\n    return 10\n@component.add(\n    name=\"mean\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef mean():",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "mean",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def mean():\n    return 0\n@component.add(\n    name=\"std deviation\",\n    units=\"widgets/week\",\n    limits=(0.0, np.nan),\n    comp_type=\"Constant\",\n    comp_subtype=\"Normal\",\n)\ndef std_deviation():",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "std_deviation",
        "kind": 2,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "def std_deviation():\n    return 10",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "__pysd_version__",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "__pysd_version__ = \"3.9.1\"\n__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "__data",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "__data = {\"scope\": None, \"time\": lambda: 0}\n_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "_root",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "_root = Path(__file__).parent\ncomponent = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "component",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "component = Component()\n#######################################################################\n#                          CONTROL VARIABLES                          #\n#######################################################################\n_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "_control_vars",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "_control_vars = {\n    \"initial_time\": lambda: 0,\n    \"final_time\": lambda: 50,\n    \"time_step\": lambda: 0.0625,\n    \"saveper\": lambda: time_step(),\n}\ndef _init_outer_references(data):\n    for key in data:\n        __data[key] = data[key]\n@component.add(name=\"Time\")",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "_integ_auto_noise",
        "kind": 5,
        "importPath": "Vensimmodel.pinknoise_test",
        "description": "Vensimmodel.pinknoise_test",
        "peekOfCode": "_integ_auto_noise = Integ(lambda: updating_pink_noise(), lambda: 0, \"_integ_auto_noise\")\n@component.add(\n    name=\"white noise\",\n    units=\"widgets/week\",\n    comp_type=\"Auxiliary\",\n    comp_subtype=\"Normal\",\n    depends_on={\n        \"mean\": 1,\n        \"std_deviation\": 1,\n        \"correlation_time\": 1,",
        "detail": "Vensimmodel.pinknoise_test",
        "documentation": {}
    },
    {
        "label": "cmd_doc",
        "kind": 5,
        "importPath": "venv.bin.runxlrd",
        "description": "venv.bin.runxlrd",
        "peekOfCode": "cmd_doc = \"\"\"\nCommands:\n2rows           Print the contents of first and last row in each sheet\n3rows           Print the contents of first, second and last row in each sheet\nbench           Same as \"show\", but doesn't print -- for profiling\nbiff_count[1]   Print a count of each type of BIFF record in the file\nbiff_dump[1]    Print a dump (char and hex) of the BIFF records in the file\nfonts           hdr + print a dump of all font objects\nhdr             Mini-overview of file (no per-sheet information)\nhotshot         Do a hotshot profile run e.g. ... -f1 hotshot bench bigfile*.xls",
        "detail": "venv.bin.runxlrd",
        "documentation": {}
    },
    {
        "label": "options",
        "kind": 5,
        "importPath": "venv.bin.runxlrd",
        "description": "venv.bin.runxlrd",
        "peekOfCode": "options = None\nif __name__ == \"__main__\":\n    import xlrd\n    import sys\n    import time\n    import glob\n    import traceback\n    import gc\n    from xlrd.timemachine import xrange, REPR\n    class LogHandler(object):",
        "detail": "venv.bin.runxlrd",
        "documentation": {}
    },
    {
        "label": "extract_file",
        "kind": 2,
        "importPath": "venv.bin.vba_extract",
        "description": "venv.bin.vba_extract",
        "peekOfCode": "def extract_file(xlsm_zip, filename):\n    # Extract a single file from an Excel xlsm macro file.\n    data = xlsm_zip.read(\"xl/\" + filename)\n    # Write the data to a local file.\n    file = open(filename, \"wb\")\n    file.write(data)\n    file.close()\n# The VBA project file and project signature file we want to extract.\nvba_filename = \"vbaProject.bin\"\nvba_signature_filename = \"vbaProjectSignature.bin\"",
        "detail": "venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "vba_filename",
        "kind": 5,
        "importPath": "venv.bin.vba_extract",
        "description": "venv.bin.vba_extract",
        "peekOfCode": "vba_filename = \"vbaProject.bin\"\nvba_signature_filename = \"vbaProjectSignature.bin\"\n# Get the xlsm file name from the commandline.\nif len(sys.argv) > 1:\n    xlsm_file = sys.argv[1]\nelse:\n    print(\n        \"\\nUtility to extract a vbaProject.bin binary from an Excel 2007+ \"\n        \"xlsm macro file for insertion into an XlsxWriter file.\\n\"\n        \"If the macros are digitally signed, extracts also a vbaProjectSignature.bin \"",
        "detail": "venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "vba_signature_filename",
        "kind": 5,
        "importPath": "venv.bin.vba_extract",
        "description": "venv.bin.vba_extract",
        "peekOfCode": "vba_signature_filename = \"vbaProjectSignature.bin\"\n# Get the xlsm file name from the commandline.\nif len(sys.argv) > 1:\n    xlsm_file = sys.argv[1]\nelse:\n    print(\n        \"\\nUtility to extract a vbaProject.bin binary from an Excel 2007+ \"\n        \"xlsm macro file for insertion into an XlsxWriter file.\\n\"\n        \"If the macros are digitally signed, extracts also a vbaProjectSignature.bin \"\n        \"file.\\n\"",
        "detail": "venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "setup_pysd_functionspace",
        "kind": 2,
        "importPath": "test_model_13_gl_with_pysd_poisson",
        "description": "test_model_13_gl_with_pysd_poisson",
        "peekOfCode": "def setup_pysd_functionspace():\n    \"\"\"Set up PySD functionspace with random_poisson function\"\"\"\n    print(\"🔧 SETTING UP PYSD FUNCTIONSPACE WITH RANDOM POISSON:\")\n    print(\"=\" * 70)\n    # Import the functionspace\n    from pysd.builders.python.python_expressions_builder import functionspace\n    # Define the random_poisson function following PySD's pattern\n    # This matches exactly what's in fix_pysd_poisson.py\n    random_poisson_expression = \"\"\"\n    np.clip(",
        "detail": "test_model_13_gl_with_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "test_model_13_gl",
        "kind": 2,
        "importPath": "test_model_13_gl_with_pysd_poisson",
        "description": "test_model_13_gl_with_pysd_poisson",
        "peekOfCode": "def test_model_13_gl():\n    \"\"\"Test model_13_gl.py with the PySD functionspace random_poisson\"\"\"\n    print(f\"\\n🧪 TESTING MODEL_13_GL.PY WITH PYSD FUNCTIONSPACE:\")\n    print(\"=\" * 60)\n    try:\n        # Load the model\n        model = pysd.load(\"2025/model_13_gl.py\")\n        print(\"✅ Model loaded successfully\")\n        # Run simulation\n        print(\"Running simulation...\")",
        "detail": "test_model_13_gl_with_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "test_multiple_runs",
        "kind": 2,
        "importPath": "test_model_13_gl_with_pysd_poisson",
        "description": "test_model_13_gl_with_pysd_poisson",
        "peekOfCode": "def test_multiple_runs():\n    \"\"\"Test multiple runs to see variation\"\"\"\n    print(f\"\\n🧪 TESTING MULTIPLE RUNS FOR VARIATION:\")\n    print(\"=\" * 50)\n    try:\n        model = pysd.load(\"2025/model_13_gl.py\")\n        # Run multiple simulations with different seeds\n        all_accidents = []\n        for i in range(5):\n            np.random.seed(i)",
        "detail": "test_model_13_gl_with_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "explain_results",
        "kind": 2,
        "importPath": "test_model_13_gl_with_pysd_poisson",
        "description": "test_model_13_gl_with_pysd_poisson",
        "peekOfCode": "def explain_results():\n    \"\"\"Explain the results and why accidents are mostly 0\"\"\"\n    print(f\"\\n📊 EXPLANATION OF RESULTS:\")\n    print(\"=\" * 50)\n    print(\"Why accidents are mostly 0:\")\n    print(\"- accident_rate = 1.0\")\n    print(\"- time_step = 0.0625\")\n    print(\"- mean = accident_rate * time_step = 0.0625\")\n    print(\"- This small mean results in mostly 0 accidents\")\n    print(\"- This is mathematically correct for Poisson distribution\")",
        "detail": "test_model_13_gl_with_pysd_poisson",
        "documentation": {}
    },
    {
        "label": "add_random_poisson_to_pysd",
        "kind": 2,
        "importPath": "validate_pysd_random_poisson",
        "description": "validate_pysd_random_poisson",
        "peekOfCode": "def add_random_poisson_to_pysd():\n    \"\"\"Add random_poisson function to PySD's functionspace\"\"\"\n    print(\"🔧 ADDING RANDOM POISSON TO PYSD FUNCTIONSPACE:\")\n    print(\"=\" * 60)\n    # Import the functionspace\n    from pysd.builders.python.python_expressions_builder import functionspace\n    # Define the random_poisson function following PySD's pattern\n    # Vensim RANDOM POISSON(min, max, mean, shift, stretch, seed)\n    # PySD expects: random_poisson(min, max, mean, shift, stretch, seed)\n    random_poisson_expression = \"\"\"",
        "detail": "validate_pysd_random_poisson",
        "documentation": {}
    },
    {
        "label": "validate_pysd_has_random_poisson",
        "kind": 2,
        "importPath": "validate_pysd_random_poisson",
        "description": "validate_pysd_random_poisson",
        "peekOfCode": "def validate_pysd_has_random_poisson():\n    \"\"\"Validate that PySD functionspace now contains random_poisson\"\"\"\n    print(f\"\\n🔍 VALIDATING PYSD HAS RANDOM POISSON:\")\n    print(\"=\" * 50)\n    # Check if random_poisson is in functionspace\n    from pysd.builders.python.python_expressions_builder import functionspace\n    if 'random_poisson' in functionspace:\n        print(\"✅ SUCCESS: PySD functionspace contains 'random_poisson'\")\n        print(f\"Function definition: {functionspace['random_poisson'][0]}\")\n        print(f\"Required modules: {functionspace['random_poisson'][1]}\")",
        "detail": "validate_pysd_random_poisson",
        "documentation": {}
    },
    {
        "label": "test_model_with_pysd_random_poisson",
        "kind": 2,
        "importPath": "validate_pysd_random_poisson",
        "description": "validate_pysd_random_poisson",
        "peekOfCode": "def test_model_with_pysd_random_poisson():\n    \"\"\"Test the model using PySD's random_poisson function\"\"\"\n    print(f\"\\n🧪 TESTING MODEL WITH PYSD RANDOM POISSON:\")\n    print(\"=\" * 60)\n    try:\n        # Load the model\n        model = pysd.load(\"2025/model_13_gl.py\")\n        print(\"✅ Model loaded successfully\")\n        # Run simulation\n        print(\"Running simulation...\")",
        "detail": "validate_pysd_random_poisson",
        "documentation": {}
    },
    {
        "label": "compare_with_expected_behavior",
        "kind": 2,
        "importPath": "validate_pysd_random_poisson",
        "description": "validate_pysd_random_poisson",
        "peekOfCode": "def compare_with_expected_behavior():\n    \"\"\"Compare results with expected Vensim behavior\"\"\"\n    print(f\"\\n📊 COMPARISON WITH EXPECTED VENSIM BEHAVIOR:\")\n    print(\"=\" * 60)\n    print(\"Expected Vensim behavior (from your plot):\")\n    print(\"- Frequent small accidents (around -10)\")\n    print(\"- Occasional large accidents (around -25 to -28)\")\n    print(\"- Random timing and magnitude\")\n    print(\"- Stochastic variation over time\")\n    print(f\"\\nNote: With current parameters:\")",
        "detail": "validate_pysd_random_poisson",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "validate_pysd_random_poisson",
        "description": "validate_pysd_random_poisson",
        "peekOfCode": "def main():\n    \"\"\"Main validation function\"\"\"\n    print(\"🧪 COMPREHENSIVE VALIDATION OF PYSD RANDOM POISSON\")\n    print(\"=\" * 80)\n    # Step 1: Add random_poisson to PySD\n    functionspace = add_random_poisson_to_pysd()\n    # Step 2: Validate PySD has the function\n    has_function = validate_pysd_has_random_poisson()\n    if has_function:\n        # Step 3: Test the model",
        "detail": "validate_pysd_random_poisson",
        "documentation": {}
    }
]